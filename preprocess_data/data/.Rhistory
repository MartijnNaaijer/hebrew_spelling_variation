library(broom.mixed)
library(janitor)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
ebh_books <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
lbh_books <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
setwd('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/preprocess_data/data')
dat <- read.csv('nouns_adjectives.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$scroll)
unique(dat$book)
selected_books <- c('Genesis', 'Exodus', 'Leviticus',
'Isaiah') # , 'Jonah', '2_Chronicles')
selected_scrolls <- c('MT', '1Q8', '1QisaaI', '1QisaaII')
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_pronominal_suffix <- as.factor(dat$has_pronominal_suffix)
dat$has_nme <- as.factor(dat$has_nme)
#dat$has_suffix <- dat$has_nme == 1 | dat$has_pronominal_suffix == 1 | dat$has_hloc == 1
#dat$has_suffix <- as.factor(dat$has_suffix)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$type <- as.factor(dat$type)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$phase <- ifelse(dat$book %in% ebh_books, 'EBH', ifelse(dat$book %in% lbh_books, 'LBH', 'NO'))
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
head(dat)
tail(dat)
table(dat$scroll)
table(dat$scroll, dat$book)
unique(dat$lex)
str(dat)
dim(dat)
mt_sel <- dat #%>%
dim(mt_sel)
table(mt_sel$book)
table(mt_sel$book, mt_sel$lex)
table(mt_sel$scroll)
table(mt_sel$lex, mt_sel$has_vowel_letter)
dim(mt_sel)
head(mt_sel)
table(mt_sel$has_vowel_letter)
mt <- mt_sel %>% filter(scroll == 'MT')
head(mt)
heb_model_no_random <- stan_glm(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix,
data = mt, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
chains = 4, iter = 2000, seed = 84735, adapt_delta=0.9
)
summary(heb_model_no_random)
plot(heb_model_no_random)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob(-0.2)
genesis <- mt %>% filter(book == 'Genesis')
jona <- mt %>% filter(book == 'Jonah')
heb_model_genesis_mt <- stan_glm(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix,
data = genesis, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
chains = 4, iter = 2000, seed = 84735, adapt_delta=0.9
)
summary(heb_model_genesis_mt)
plot(heb_model_no_random)
plot(heb_model_genesis_mt)
heb_model_jona_mt <- stan_glm(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix,
data = jona, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
chains = 4, iter = 2000, seed = 84735, adapt_delta=0.9
)
summary(heb_model_jona_mt)
heb_model_jona_mt <- stan_glm(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix,
data = jona, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
chains = 4, iter = 2000, seed = 84735, adapt_delta=0.9
)
heb_model_jona_mt <- stan_glm(
has_vowel_letter ~  has_nme + has_pronominal_suffix + has_prefix,
data = jona, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
chains = 4, iter = 2000, seed = 84735, adapt_delta=0.9
)
summary(heb_model_jona_mt)
plot(heb_model_jona_mt)
head(dat)
sum(is.na(dat$pattern))
table(dat$pattern)
sum(table(dat$pattern))
dim(dat)
folder <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/preprocess_data/data'
file <- 'nouns_adjectives.csv'
dat <- read.csv(file.path(folder, file), sep='\t')
dim(dat)
head(dat)
str(dat)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_pronominal_suffix <- as.factor(dat$has_pronominal_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_suffix <- dat$has_nme == 1 | dat$has_pronominal_suffix == 1 | dat$has_hloc == 1
dat$has_suffix <- as.factor(dat$has_suffix)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_pronominal_suffix <- as.factor(dat$has_pronominal_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_suffix <- dat$has_nme == 1 | dat$has_pronominal_suffix == 1 | dat$has_hloc == 1
dat$has_suffix <- as.factor(dat$has_suffix)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$phase <- ifelse(dat$book %in% ebh_books, 'EBH', ifelse(dat$book %in% lbh_books, 'LBH', 'NO'))
head(dat)
tail(dat)
table(dat$scroll, dat$book)
length(unique(dat$scroll))
table(dat$scroll)
table(dat$scroll, dat$book)
length(unique(dat$scroll))
unique(dat$lex)
mt_sel <- dat #%>%
dim(mt_sel)
unique(dat$book)
table(mt_sel$book)
table(mt_sel$book, mt_sel$lex)
table(mt_sel$scroll)
table(mt_sel$lex, mt_sel$has_vowel_letter)
calculate_var_lexemes_types <- function(book_df) {
lexemes <- book_df$lex_type %>% unique
types <- book_df$type %>% unique
lex_typ_dfs <- list()
for (lexeme in lexemes) {
for (typ in types) {
lex_typ_df <- book_df %>% filter(lex_type == lexeme & type == typ)
vowel_values <- lex_typ_df$has_vowel_letter %>% unique
if (length(vowel_values) > 1) {
lex_typ_dfs[[paste(lexeme, typ)]] <- lex_typ_df
}
}
}
return(lex_typ_dfs)
}
mt_sel_df <- calculate_var_lexemes_types(mt_sel)
mt_sel <- do.call('rbind', mt_sel_df)
dim(mt_sel)
head(mt_sel)
table(mt_sel$has_vowel_letter)
length(unique(mt_sel$scroll))
dss <- mt_sel %>% filter(scroll != 'MT')
dss_counts <- dss$scroll %>% table %>% sort(decreasing = TRUE) %>% as.data.frame()
colnames(dss_counts) <- c('scroll', 'count')
head(dss_counts)
dss_counts %>% filter(count < 6) %>% nrow()
head(dss_counts)
mt_sel <- do.call('rbind', mt_sel_df)
dim(mt_sel)
calculate_var_lexemes_types <- function(book_df) {
lexemes <- book_df$lex_type %>% unique
types <- book_df$type %>% unique
lex_typ_dfs <- list()
for (lexeme in lexemes) {
for (typ in types) {
lex_typ_df <- book_df %>% filter(lex_type == lexeme & type == typ)
vowel_values <- lex_typ_df$has_vowel_letter %>% unique
if (length(vowel_values) > 1) {
lex_typ_dfs[[paste(lexeme, typ)]] <- lex_typ_df
}
else (print(lexeme, typ))
}
}
return(lex_typ_dfs)
}
mt_sel_df <- calculate_var_lexemes_types(mt_sel)
calculate_var_lexemes_types <- function(book_df) {
lexemes <- book_df$lex_type %>% unique
types <- book_df$type %>% unique
lex_typ_dfs <- list()
for (lexeme in lexemes) {
for (typ in types) {
lex_typ_df <- book_df %>% filter(lex_type == lexeme & type == typ)
vowel_values <- lex_typ_df$has_vowel_letter %>% unique
if (length(vowel_values) > 1) {
lex_typ_dfs[[paste(lexeme, typ)]] <- lex_typ_df
}
else {print(paste(lexeme, typ))}
}
}
return(lex_typ_dfs)
}
mt_sel_df <- calculate_var_lexemes_types(mt_sel)
calculate_var_lexemes_types <- function(book_df) {
lexemes <- book_df$lex_type %>% unique
types <- book_df$type %>% unique
lex_typ_dfs <- list()
for (lexeme in lexemes) {
for (typ in types) {
lex_typ_df <- book_df %>% filter(lex_type == lexeme & type == typ)
vowel_values <- lex_typ_df$has_vowel_letter %>% unique
if (length(vowel_values) > 1) {
lex_typ_dfs[[paste(lexeme, typ)]] <- lex_typ_df
}
else {if (length(lex_typ_df) > 1) {print(lexeme)}}
}
}
return(lex_typ_dfs)
}
mt_sel_df <- calculate_var_lexemes_types(mt_sel)
unique(dat$lex)
unique(mt_sel$lex)
library(tidyverse)
ebh_books <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
lbh_books <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
folder <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/preprocess_data/data'
file <- 'nouns_adjectives.csv'
dat <- read.csv(file.path(folder, file), sep='\t')
dim(dat)
head(dat)
str(dat)
dim(dat)
length(unique(mt_sel$scroll))
table(mt_sel$scroll)
dss <- mt_sel %>% filter(scroll != 'MT')
dss_counts <- dss$scroll %>% table %>% sort(decreasing = TRUE) %>% as.data.frame()
colnames(dss_counts) <- c('scroll', 'count')
head(dss_counts)
dss_counts %>% filter(count < 6) %>% nrow()
head(dss_counts)
ggplot(dss, aes(fct_infreq(scroll))) + geom_bar()
ebh_books <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
lbh_books <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
folder <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/preprocess_data/data'
file <- 'nouns_adjectives.csv'
dat <- read.csv(file.path(folder, file), sep='\t')
dim(dat)
head(dat)
str(dat)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_pronominal_suffix <- as.factor(dat$has_pronominal_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_suffix <- dat$has_nme == 1 | dat$has_pronominal_suffix == 1 | dat$has_hloc == 1
dat$has_suffix <- as.factor(dat$has_suffix)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$phase <- ifelse(dat$book %in% ebh_books, 'EBH', ifelse(dat$book %in% lbh_books, 'LBH', 'NO'))
head(dat)
tail(dat)
table(dat$scroll)
table(dat$scroll, dat$book)
length(unique(dat$scroll))
unique(dat$lex)
mt_sel <- dat #%>%
dim(mt_sel)
unique(dat$book)
unique(dat$lex)
dim(dat)
unique(dat$book)
table(dat$book)
table(dat$book, dat$lex)
table(dat$scroll)
table(dat$lex, dat$has_vowel_letter)
head(dat)
unique(dat$lex)
table(dat$has_vowel_letter)
length(unique(dat$scroll))
dss <- dat %>% filter(scroll != 'MT')
dss_counts <- dss$scroll %>% table %>% sort(decreasing = TRUE) %>% as.data.frame()
colnames(dss_counts) <- c('scroll', 'count')
head(dss_counts)
dss_counts %>% filter(count < 6) %>% nrow()
head(dss_counts)
ggplot(dss, aes(fct_infreq(scroll))) + geom_bar()
book_scroll_df <- dss %>% group_by(book) %>% summarise(scroll_count = unique(scroll))
head(book_scroll_df)
ggplot(book_scroll_df, aes(fct_infreq(book))) + geom_bar()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(deut_dss, aes(fct_infreq(scroll))) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.text.x=element_blank())
ggplot(book_scroll_df, aes(fct_infreq(book))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.text.x=element_blank())
ggplot(book_scroll_df, aes(fct_infreq(book))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.ticks.x=element_blank())
book_scroll_df <- dss %>% group_by(book) %>% summarise(scroll_count = unique(scroll))
head(book_scroll_df)
ggplot(book_scroll_df, aes(fct_infreq(book))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.ticks.x=element_blank())
ggplot(dss, aes(fct_infreq(scroll))) +
geom_bar() +
theme(axis.ticks.x=element_blank())
ggplot(dss, aes(fct_infreq(scroll))) +
geom_bar() +
theme(axis.text.x=element_blank())
ggplot(book_scroll_df, aes(fct_infreq(book))) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.title.x=element_blank())
head(dss_counts)
ggplot(dss, aes(fct_infreq(scroll))) +
geom_bar() +
theme(axis.text.x=element_blank())
ggplot(dss, aes(fct_infreq(scroll))) +
ggplot(dss, aes(fct_infreq(scroll))) +
geom_bar() +
theme(axis.text.x=element_blank(),
theme(axis.text.x=element_blank()))
ggplot(dss, aes(fct_infreq(scroll))) +
geom_bar() +
theme(axis.text.x=element_blank(),
axis.text.x=element_blank())
ggplot(dss, aes(fct_infreq(scroll))) +
geom_bar() +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
deut_dss <- dss %>% filter(book == 'Deuteronomy')
dim(deut_dss)
ggplot(deut_dss, aes(fct_infreq(scroll))) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(deut_dss, aes(fct_infreq(scroll))) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.title.x=element_blank())
names(dss)
length(unique(dss$lex))
names(dat)
unique(dat$lex)
table(dat$sp)
dat_unique_lex <- dat %>% distinct(lex, .keep_all = TRUE)
table(dat_unique_lex$sp)
table(dat$vowel_letter)
dat_temp <- dat %>% filter(!vowel_letter %in% c('>W', '>J'))
dat_temp$vowel_letter[dat_temp$vowel_letter == ''] <- 'No vowel letter'
ggplot(dat_temp, aes(fct_infreq(vowel_letter))) + geom_bar()
table(dat$vowel_letter)
dat_temp <- dat %>% filter(!vowel_letter %in% c('>W', '>J', 'W>', 'W>W'))
dat_temp$vowel_letter[dat_temp$vowel_letter == ''] <- 'No vowel letter'
ggplot(dat_temp, aes(fct_infreq(vowel_letter))) +
geom_bar() +
theme(axis.title.x=element_blank())
library(bayesrules)
library(tidyverse)
library(bayesplot)
library(rstan)
library(rstanarm)
library(tidybayes)
library(broom.mixed)
library(janitor)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
ebh_books <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
lbh_books <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
setwd('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/preprocess_data/data')
dat <- read.csv('nouns_adjectives.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$scroll)
unique(dat$book)
selected_books <- c('Genesis', 'Exodus', 'Leviticus',
'Isaiah') # , 'Jonah', '2_Chronicles')
selected_scrolls <- c('MT', '1Q8', '1QisaaI', '1QisaaII')
sum(is.na(dat$pattern))
sum(table(dat$pattern))
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_pronominal_suffix <- as.factor(dat$has_pronominal_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$type <- as.factor(dat$type)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$phase <- ifelse(dat$book %in% ebh_books, 'EBH', ifelse(dat$book %in% lbh_books, 'LBH', 'NO'))
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
mt <- dat %>% filter(scroll == 'MT')
head(mt)
heb_model_pooled_mt <- stan_glm(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix,
data = mt, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
prior_aux = exponential(1, autoscale = TRUE),
chains = 4, iter = 2000, seed = 84735, adapt_delta=0.9
)
mt_ebh_lbh <- dat %>% filter(scroll == 'MT') %>%
filter(phase %in% c('ebh', 'lbh'))
heb_model_random_scroll_book <- stan_glmer(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix + phase +
(has_hloc + has_nme + has_pronominal_suffix + has_prefix | scroll/book/lex_type),
data = mt_ebh_lbh, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
prior_aux = exponential(1, autoscale = TRUE),
chains = 4, iter = 5000, seed = 84735, adapt_delta=0.9
)
dim(mt_ebh_lbh)
mt_ebh_lbh <- dat %>% filter(scroll == 'MT') %>%
filter(phase %in% c('EBH', 'LBH'))
dim(mt_ebh_lbh)
table(mt_ebh_lbh$phase)
heb_model_diachrony_mt_no_random_effects <- stan_glm(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix + phase,
data = mt_ebh_lbh, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
prior_aux = exponential(1, autoscale = TRUE),
chains = 4, iter = 5000, seed = 84735, adapt_delta=0.9
)
summary(heb_model_diachrony_mt_no_random_effects)
heb_model_diachrony_mt <- stan_glmer(
has_vowel_letter ~  has_hloc + has_nme + has_pronominal_suffix + has_prefix + phase +
(has_hloc + has_nme + has_pronominal_suffix + has_prefix | book), # /lex_type),
data = mt_ebh_lbh, family = binomial,
prior_intercept = normal(0, 1.0, autoscale = TRUE),
prior = normal(0, 1.0, autoscale = TRUE),
prior_aux = exponential(1, autoscale = TRUE),
chains = 4, iter = 5000, seed = 84735, adapt_delta=0.9
)
khn <- dat %>% filter(lex == 'KHN/')
dim(khn)
length(unique(khn$scroll))
table(khn$scroll, khn$vowel_letter)
allwt <- dat %>% filter(lex == '<LLWT/')
dim(allwt)
table(allwt$scroll, allwt$has_vowel_letter)
allwt
zrw <- dat %>% filter(lex == 'ZRW</')
zrw
zrw <- dat %>% filter(lex == '>ZRW</')
zrw
zrw <- dat %>% filter(lex == 'ZRW</')
zrw <- dat %>% filter(lex == 'ZR</')
zrw
zrw <- dat %>% filter(lex == '>ZR</')
zrw
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
folder <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/preprocess_data/data'
file <- 'nouns_adjectives.csv'
dat <- read.csv(file.path(folder, file), sep='\t')
dim(dat)
head(dat)
str(dat)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_pronominal_suffix <- as.factor(dat$has_pronominal_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_suffix <- dat$has_nme == 1 | dat$has_pronominal_suffix == 1 | dat$has_hloc == 1
dat$has_suffix <- as.factor(dat$has_suffix)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
dat$phase <- ifelse(dat$book %in% ebh_books, 'EBH', ifelse(dat$book %in% lbh_books, 'LBH', 'NO'))
head(dat)
tail(dat)
table(dat$scroll)
table(dat$scroll, dat$book)
length(unique(dat$scroll))
unique(dat$lex)
dim(dat)
unique(dat$book)
table(dat$book)
table(dat$book, dat$lex)
table(dat$scroll)
table(dat$lex, dat$has_vowel_letter)
table(dat$sp)
head(dat)
unique(dat$lex)
table(dat$has_vowel_letter)
table(dat$qsp, dat$has_vowel_letter)
