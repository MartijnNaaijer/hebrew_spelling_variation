has_prefix +
has_hloc +
(1 | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_sel_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 2000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
selected_lex_types <- c('>DWN/_last', 'YPWN/_last', 'YRWR/_last', 'MWR>/_first', 'VWBH/_single', 'GDWL/_last',
'YRWR/_last', 'MWCB/_first')
mt_sp_gen_sel_var <- mt_sp_gen_var |> filter(lex_type %in% selected_lex_types)
dim(mt_sp_gen_sel_var)
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc +
(1 | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_sel_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 2000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc +
(1 | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 2000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc +
(has_prs + has_nme + has_prefix + has_hloc | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 2000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc # +
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 2000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
logit2prob(1.907)
dat_no_affix <- mt_sp_gen_var |> filter(has_prs == 0 & has_nme = 0 & has_hloc == 0 & has_prefix == 0)
dat_no_affix <- mt_sp_gen_var |> filter(has_prs == 0 & has_nme == 0 & has_hloc == 0 & has_prefix == 0)
mean(dat_no_affix$has_vowel_letter)
mean(as.numeric(dat_no_affix$has_vowel_letter))
mean(as.numeric(as.character(dat_no_affix$has_vowel_letter)))
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc # +
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 3000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
dat_no_affix <- mt_sp_gen_var |> filter(has_prs == 0 & has_nme == 0 & has_hloc == 0 & has_prefix == 0)
mean(as.numeric(as.character(dat_no_affix$has_vowel_letter)))
logit2prob(1.907)
heb_model_ha <- glmer(
has_vowel_letter ~  has_pronominal_suffix +  has_nme + has_prefix +
(1 | book2),
data = mt_sp_gen_var, family = binomial,
)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix +
(1 | book2),
data = mt_sp_gen_var, family = binomial,
)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix +
(1 | scroll),
data = mt_sp_gen_var, family = binomial,
)
fixef(heb_model_ha)
ranef(heb_model_ha)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix + has_hloc
(1 | scroll),
data = mt_sp_gen_var, family = binomial,
)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix + has_hloc +
(1 | scroll),
data = mt_sp_gen_var, family = binomial,
)
fixef(heb_model_ha)
ranef(heb_model_ha)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix + has_hloc +
(1 | scroll),
data = mt_sp_gen_sel_var, family = binomial,
)
fixef(heb_model_ha)
ranef(heb_model_ha)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 3000,
iter = 6000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc  +
(1 | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 3000,
iter = 6000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.95),
seed = 123)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 3000,
iter = 6000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.99),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
brm_model2 <- brm(formula = formula_mt_sp,
prior = set_prior("normal(0, 1)", class = "Intercept") +
set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_sel_var,
family = bernoulli(link = "logit"),
warmup = 3000,
iter = 6000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.99),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
plot(brm_model2)
table(mt_sp_gen_sel_var$scroll)
sort(table(mt_sp_gen_sel_var$scroll))
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc  +
(1 | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
#prior = set_prior("normal(0, 1)", class = "Intercept") +
#  set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_sel_var,
family = bernoulli(link = "logit"),
warmup = 5000,
iter = 10000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.99),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix + has_hloc +
(1 | scroll),
data = mt_sp_gen_sel_var, family = binomial,
)
fixef(heb_model_ha)
ranef(heb_model_ha)
dat_no_affix <- mt_sp_gen_sel_var |> filter(has_prs == 0 & has_nme == 0 & has_hloc == 0 & has_prefix == 0)
mean(as.numeric(as.character(dat_no_affix$has_vowel_letter)))
dat_no_affix
sort(table(mt_sp_gen_var$lex_type))
selected_lex_types <- c('>DWN/_last', 'YPWN/_last', 'YRWR/_last', 'MWR>/_first', 'VWBH/_single', 'GDWL/_last',
'YRWR/_last', 'MWCB/_first', '>XWT/_last', 'XLWM/_last')
mt_sp_gen_sel_var <- mt_sp_gen_var |> filter(lex_type %in% selected_lex_types)
dim(mt_sp_gen_sel_var)
sort(table(mt_sp_gen_sel_var$scroll))
formula_mt_sp <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc  +
(1 | scroll)
brm_model2 <- brm(formula = formula_mt_sp,
#prior = set_prior("normal(0, 1)", class = "Intercept") +
#  set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_sel_var,
family = bernoulli(link = "logit"),
warmup = 5000,
iter = 10000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.99),
seed = 123)
plot(brm_model2)
fixef(brm_model2)
ranef(brm_model2)
dat_no_affix <- mt_sp_gen_sel_var |> filter(has_prs == 0 & has_nme == 0 & has_hloc == 0 & has_prefix == 0)
mean(as.numeric(as.character(dat_no_affix$has_vowel_letter)))
dat_no_affix
head(mt_sp_gen_sel_var)
tail(mt_sp_gen_sel_var)
brm_model2 <- brm(formula = formula_mt_sp,
#prior = set_prior("normal(0, 1)", class = "Intercept") +
#  set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 5000,
iter = 10000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.99),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
logit2prob(1.95)
dat_no_affix <- mt_sp_gen_var |> filter(has_prs == 0 & has_nme == 0 & has_hloc == 0 & has_prefix == 0)
mean(as.numeric(as.character(dat_no_affix$has_vowel_letter)))
dat_no_affix_sp <- dat_no_affix |> filter(scroll == 'SP')
mean(as.numeric(as.character(dat_no_affix_mt$has_vowel_letter)))
dat_no_affix_mt <- dat_no_affix |> filter(scroll == 'MT')
mean(as.numeric(as.character(dat_no_affix_mt$has_vowel_letter)))
mean(as.numeric(as.character(dat_no_affix_sp$has_vowel_letter)))
logit2prob(1.9531164 -0.4276503)
logit2prob(1.9531164 + 0.7575043)
heb_model_ha <- glmer(
has_vowel_letter ~  has_prs +  has_nme + has_prefix + has_hloc +
(1 | scroll),
data = mt_sp_gen_var, family = binomial,
)
fixef(heb_model_ha)
ranef(heb_model_ha)
logit2prob(2.1093299 )
logit2prob(2.1093299 )
logit2prob(2.1093299 - 0.5812552)
logit2prob(2.1093299 + 0.5800401)
mean(as.numeric(as.character(dat_no_affix$has_vowel_letter)))
dat_no_affix_mt <- dat_no_affix |> filter(scroll == 'MT')
mean(as.numeric(as.character(dat_no_affix_mt$has_vowel_letter)))
dat_no_affix_sp <- dat_no_affix |> filter(scroll == 'SP')
mean(as.numeric(as.character(dat_no_affix_sp$has_vowel_letter)))
fixef(brm_model2)
brm_model2 <- brm(formula = formula_mt_sp,
#prior = set_prior("normal(0, 1)", class = "Intercept") +
#  set_prior("normal(0,1)", class = "b"),
data = mt_sp_gen_var,
family = bernoulli(link = "logit"),
warmup = 1000,
iter = 2000,
chains = 4,
cores=4,
control = list(adapt_delta = 0.99),
seed = 123)
fixef(brm_model2)
ranef(brm_model2)
###########################################################################
dim(mt_sp_gen_var)
library(tidyverse)
library(lme4)
library(brms)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/nouns_adjectives_with_sp.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
dat$has_suffix <- dat$has_prs | dat$has_nme
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_suffix <- as.factor(dat$has_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$book2 <- dat$book %>% str_replace('1_', '') %>% str_replace('2_', '')
table(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
mt_sp_pent <- mt_sp |> filter(book %in% LAW_BOOKS)
mt_sp <- dat |> filter(scroll %in% c('MT', 'SP'))
mt_sp_genesis <- mt_sp |> filter(book == 'Genesis')
dim(mt_sp_genesis)
variation_lex_type_list <- list()
select_variable_lex_types <- function(df) {
variation_lex_type_list <- list()
for (lex_t in unique(df$lex_type)) {
lex_type_df <- df %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
var_lex_type_df <- do.call('rbind', variation_lex_type_list)
var_lex_type_df <- var_lex_type_df[order(var_lex_type_df$tf_id),]
return(var_lex_type_df)
}
select_variable_lex_types <- function(df) {
variation_lex_type_list <- list()
for (lex_t in unique(df$lex_type)) {
lex_type_df <- df %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
var_lex_type_df <- do.call('rbind', variation_lex_type_list)
var_lex_type_df <- var_lex_type_df[order(var_lex_type_df$tf_id),]
return(var_lex_type_df)
}
mt_sp <- dat |> filter(scroll %in% c('MT', 'SP'))
mt_sp_genesis <- mt_sp |> filter(book == 'Genesis')
dim(mt_sp_genesis)
mt_sp_gen_var <- select_variable_lex_types(mt_sp_genesis)
dim(mt_sp_gen_var)
head(mt_sp_gen_var)
head(mt_sp)
# MT SP GENESIS
head(dat)
mt_sp <- dat |> filter(scroll %in% c('MT', 'SP'))
head(mt_sp)
mt_sp_genesis <- mt_sp |> filter(book == 'Genesis')
dim(mt_sp_genesis)
mt_sp_gen_var <- select_variable_lex_types(mt_sp_genesis)
dim(mt_sp_gen_var)
head(mt_sp_gen_var)
mt_sp_pent_var <- select_variable_lex_types(mt_sp_pent)
mt_sp_pent <- mt_sp |> filter(book %in% LAW_BOOKS)
mt_sp_pent_var <- select_variable_lex_types(mt_sp_pent)
dim(mt_sp_pent)
head(mt_sp_pent)
fit_brm_model <- function(data, formula, warmup, iter, adapt_delta) {
trace <- brm(formula = formula,
prior = set_prior("normal(0, 5)", class = "Intercept") +
set_prior("normal(0, 5)", class = "b"),
data = data,
family = bernoulli(link = "logit"),
warmup = warmup,
iter = iter,
chains = 4,
cores=4,
control = list(adapt_delta = adapt_delta),
seed = 123)
return(trace)
}
formula_pent <- has_vowel_letter ~
has_prs +
has_nme +
has_prefix +
has_hloc  +
(1 | scroll)
trace_pent <- fit_brm_model(mt_sp_pent, formula_pent, 1000, 2000, 0.95)
# Random intercept BOOK in SCROLL
formula_pent2 <- has_vowel_letter ~
has_prs + has_nme + has_prefix + has_hloc  +
(1 | scroll/book)
trace_pent2 <- fit_brm_model(mt_sp_pent, formula_pent2, 1000, 2000, 0.95)
summary(trace_pent2)
plot(trace_pent2)
ranef(trace_pent2)
# Random intercept BOOK in SCROLL
formula_pent2 <- has_vowel_letter ~
1  +
(1 | scroll/book)
trace_pent2 <- fit_brm_model(mt_sp_pent, formula_pent2, 2000, 4000, 0.97)
fit_brm_model <- function(data, formula, warmup, iter, adapt_delta) {
trace <- brm(formula = formula,
prior = set_prior("normal(0, 5)", class = "Intercept") #+
#set_prior("normal(0, 5)", class = "b"),
data = data,
# Random intercept BOOK in SCROLL
formula_pent2 <- has_vowel_letter ~
1  +
(1 | scroll/book)
trace_pent2 <- fit_brm_model(mt_sp_pent, formula_pent2, 2000, 4000, 0.97)
fit_brm_model <- function(data, formula, warmup, iter, adapt_delta) {
trace <- brm(formula = formula,
#prior = set_prior("normal(0, 5)", class = "Intercept") #+
#set_prior("normal(0, 5)", class = "b"),
data = data,
family = bernoulli(link = "logit"),
warmup = warmup,
iter = iter,
chains = 4,
cores=4,
control = list(adapt_delta = adapt_delta),
seed = 123)
return(trace)
}
# Random intercept BOOK in SCROLL
formula_pent2 <- has_vowel_letter ~
1  +
(1 | scroll/book)
trace_pent2 <- fit_brm_model(mt_sp_pent, formula_pent2, 2000, 4000, 0.97)
# Random intercept BOOK in SCROLL
formula_pent2 <- has_vowel_letter ~
has_prs + has_nme + has_prefix + has_hloc  +
(1 | scroll/book/lex_type)
trace_pent2 <- fit_brm_model(mt_sp_pent, formula_pent2, 2000, 4000, 0.97)
summary(trace_pent2)
ranef(trace_pent2)
