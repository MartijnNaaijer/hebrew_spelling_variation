ggtitle('Logit of a vowel letter in the last syllable in MT, CUT DATA')
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
model_full_data <- 'bayes_model_mt_with_neigh.rds'
model_cut_data <- 'bayes_model_mt_with_neigh_lex_type_above_median.rds'
file_path_mt_var <- file.path(MODEL_FOLDER, model_full_data)
file_path_mt_var_cut <- file.path(MODEL_FOLDER, model_cut_data)
trace_mt <- readRDS(file_path_mt_var)
model_vars <- get_variables(trace_mt_cut)
model_vars <- get_variables(trace_mt)
model_vars
head(trace_mt)
fixed_draws_last <- trace_mt %>%
spread_draws(b_Intercept,
b_law_phase1, b_law_phase2, b_law_phase3,
b_has_prefix1, b_has_prs1, b_has_nme1, b_neigh_vowel_letter1,
)
head(fixed_draws_last)
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Torah'
last_intercept_fp <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1, .width = c(.95, .66))
last_intercept_fp$feature <- 'Intercept Former Prophets'
last_intercept_lbh <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase2, .width = c(.95, .66))
last_intercept_lbh$feature <- 'Intercept LBH'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
last_prs <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prs1, .width = c(.95, .66))
last_prs$feature <- 'With Pronominal Suffix'
last_prefix <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prefix1, .width = c(.95, .66))
last_prefix$feature <- 'With Prefix'
last_neighbor <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_neigh_vowel_letter1, .width = c(.95, .66))
last_neighbor$feature <- 'With vowel letter in neigboring syllable'
last_prefix
last_neighbor
fixed_last_syll <- rbind(last_intercept, last_intercept_fp, last_intercept_lbh,last_nme, last_prs, last_prefix, last_neighbor)
fixed_last_syll
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With vowel letter in neigboring syllable',
'With Prefix',
'With Pronominal Suffix',
'With Nominal Ending',
'Intercept LBH',
'Intercept Former Prophets',
'Intercept Torah'))
fixed_last_syll
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Logit of a vowel letter in the last syllable in MT, FULL DATA')
trace_mt <- readRDS(file_path_mt_var_cut)
model_vars <- get_variables(trace_mt)
model_vars
head(trace_mt)
fixed_draws_last <- trace_mt %>%
spread_draws(b_Intercept,
b_law_phase1, b_law_phase2, b_law_phase3,
b_has_prefix1, b_has_prs1, b_has_nme1, b_neigh_vowel_letter1,
)
head(fixed_draws_last)
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Torah'
last_intercept_fp <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1, .width = c(.95, .66))
last_intercept_fp$feature <- 'Intercept Former Prophets'
last_intercept_lbh <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase2, .width = c(.95, .66))
last_intercept_lbh$feature <- 'Intercept LBH'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
last_prs <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prs1, .width = c(.95, .66))
last_prs$feature <- 'With Pronominal Suffix'
last_prefix <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prefix1, .width = c(.95, .66))
last_prefix$feature <- 'With Prefix'
last_neighbor <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_neigh_vowel_letter1, .width = c(.95, .66))
last_neighbor$feature <- 'With vowel letter in neigboring syllable'
last_prefix
last_neighbor
fixed_last_syll <- rbind(last_intercept, last_intercept_fp, last_intercept_lbh,last_nme, last_prs, last_prefix, last_neighbor)
fixed_last_syll
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With vowel letter in neigboring syllable',
'With Prefix',
'With Pronominal Suffix',
'With Nominal Ending',
'Intercept LBH',
'Intercept Former Prophets',
'Intercept Torah'))
fixed_last_syll
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Logit of a vowel letter in the last syllable in MT, CUT DATA')
head(trace_mt)
fixed_draws_last <- trace_mt %>%
spread_draws(b_Intercept,
b_law_phase1, b_law_phase2, b_law_phase3,
b_has_prefix1, b_has_prs1, b_has_nme1, b_neigh_vowel_letter1,
)
head(fixed_draws_last)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/nouns_adjectives.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
dat$has_suffix <- dat$has_prs | dat$has_nme
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_suffix <- as.factor(dat$has_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$neigh_vowel_letter <- as.factor(dat$neigh_vowel_letter)
dat$type <- as.factor(dat$type)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$book2 <- dat$book %>% str_replace('1_', '') %>% str_replace('2_', '')
table(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
mt <- dat %>% filter(scroll == 'MT')
variation_lex_type_list <- list()
for (lex_t in unique(mt$lex_type)) {
lex_type_df <- mt %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
mt_var <- do.call('rbind', variation_lex_type_list)
mt_var <- mt_var[order(mt_var$tf_id),]
head(mt_var)
levels(mt_var$type)
dim(mt_var)
str(mt_var)
################################################################################
mt_var <- droplevels(mt_var)
lex_distr <- sort(table(mt_var$lex_type))
length(lex_distr)
barplot(lex_distr)
sum(lex_distr > 10)
boxplot(lex_distr)
summary(lex_distr)
median <- median(lex_distr)
frequent_lex_types <- as.data.frame(lex_distr[lex_distr > median])$Var1
mt_var_frequent <- mt_var |> filter(lex_type %in% frequent_lex_types)
dim(mt_var_frequent)
tail(mt_var_frequent, 50)
dim(mt_var)
dim(mt_var_frequent)
fit_brm_model <- function(data, formula, warmup, iter, adapt_delta) {
trace <- brm(formula = formula,
prior = set_prior("normal(0, 5)", class = "Intercept") +
set_prior("normal(0, 5)", class = "b"),
data = data,
family = bernoulli(link = "logit"),
warmup = warmup,
iter = iter,
chains = 4,
cores=4,
control = list(adapt_delta = adapt_delta),
seed = 123)
return(trace)
}
fit_brm_model <- function(data, formula, warmup, iter, adapt_delta) {
trace <- brm(formula = formula,
prior = set_prior("normal(0, 5)", class = "Intercept") +
set_prior("normal(0, 5)", class = "b"),
data = data,
family = bernoulli(link = "logit"),
warmup = warmup,
iter = iter,
chains = 4,
cores=4,
control = list(adapt_delta = adapt_delta),
seed = 123)
return(trace)
}
formula_mt <- has_vowel_letter ~
has_prs*type*law_phase +
has_nme*neigh_vowel_letter*type*law_phase +
has_prefix*type*law_phase +
#neigh_vowel_letter*type*law_phase +
(has_prs + has_nme + has_prefix + neigh_vowel_letter | book2/lex_type)
dim(mt_var_frequent)
length(unique(mt_var_frequent$lex_type))
bayes_model_mt_var <- fit_brm_model(mt_var_frequent,
formula_mt,
4000, 8000, 0.95)
summary(bayes_model_mt_var)
ranef(bayes_model_mt_var)
file_path_mt_var <- file.path(MODEL_FOLDER, 'bayes_model_mt_with_neigh_lex_type_above_median_interaction_nme.rds')
saveRDS(bayes_model_mt_var, file = file_path_mt_var)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/nouns_adjectives.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
dat$has_suffix <- dat$has_prs | dat$has_nme
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_suffix <- as.factor(dat$has_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$neigh_vowel_letter <- as.factor(dat$neigh_vowel_letter)
dat$type <- as.factor(dat$type)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$book2 <- dat$book %>% str_replace('1_', '') %>% str_replace('2_', '')
table(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
mt <- dat %>% filter(scroll == 'MT')
variation_lex_type_list <- list()
for (lex_t in unique(mt$lex_type)) {
lex_type_df <- mt %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
mt_var <- do.call('rbind', variation_lex_type_list)
mt_var <- mt_var[order(mt_var$tf_id),]
head(mt_var)
levels(mt_var$type)
dim(mt_var)
str(mt_var)
################################################################################
mt_var <- droplevels(mt_var)
lex_distr <- sort(table(mt_var$lex_type))
trace_mt <- readRDS(file_path_mt_var)
file_path_mt_var <- file.path(MODEL_FOLDER, 'bayes_model_mt_with_neigh_lex_type_interaction_nme_full_data.rds')
trace_mt <- readRDS(file_path_mt_var)
model_vars <- get_variables(trace_mt)
model_vars
fixed_draws_last <- trace_mt %>%
spread_draws(b_Intercept,
b_law_phase1,
b_has_prefix1, b_has_prs1, b_has_nme1, b_neigh_vowel_letter1,
`b_has_nme1:neigh_vowel_letter1`,
)
head(fixed_draws_last)
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Torah'
last_intercept_former_prophets <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Former Prophets'
last_intercept_former_prophets <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase2, .width = c(.95, .66))
last_intercept$feature <- 'Intercept LBH'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
head(fixed_draws_last)
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Torah'
last_intercept_former_prophets <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Former Prophets'
last_intercept_former_prophets <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase2, .width = c(.95, .66))
last_intercept$feature <- 'Intercept LBH'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Torah'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
last_prs <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prs1, .width = c(.95, .66))
last_prs$feature <- 'With Pronominal Suffix'
last_prefix <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prefix1, .width = c(.95, .66))
last_prefix$feature <- 'With Prefix'
last_neighbor <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_neigh_vowel_letter1, .width = c(.95, .66))
last_neighbor$feature <- 'With vowel letter in neigboring syllable'
last_neighbor_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1 + b_neigh_vowel_letter1, .width = c(.95, .66))
last_neighbor$feature <- 'With nominal ending and vowel letter in neigboring syllable'
last_prefix
last_neighbor
fixed_last_syll <- rbind(last_intercept, last_nme, last_prs, last_prefix, last_neighbor, last_neighbor_nme)
last_neighbor_nme
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Torah'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
last_prs <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prs1, .width = c(.95, .66))
last_prs$feature <- 'With Pronominal Suffix'
last_prefix <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prefix1, .width = c(.95, .66))
last_prefix$feature <- 'With Prefix'
last_neighbor <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_neigh_vowel_letter1, .width = c(.95, .66))
last_neighbor$feature <- 'With vowel letter in neigboring syllable'
last_neighbor_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1 + b_neigh_vowel_letter1, .width = c(.95, .66))
last_neighbor_nme$feature <- 'With nominal ending and vowel letter in neigboring syllable'
last_prefix
last_neighbor
last_neighbor_nme
fixed_last_syll <- rbind(last_intercept, last_nme, last_prs, last_prefix, last_neighbor, last_neighbor_nme)
fixed_last_syll
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With nominal ending and vowel letter in neigboring syllable',
'With vowel letter in neigboring syllable',
'With Prefix',
'With Pronominal Suffix',
'With Nominal Ending',
'Intercept'))
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch and SP')
summary(trace_mt)
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With nominal ending and vowel letter in neigboring syllable',
'With vowel letter in neigboring syllable',
'With Prefix',
'With Pronominal Suffix',
'With Nominal Ending',
'Intercept Torah'))
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch and SP')
last_neighbor_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1 + b_neigh_vowel_letter1 + `b_has_nme1:neigh_vowel_letter1`, .width = c(.95, .66))
last_neighbor_nme$feature <- 'With nominal ending and vowel letter in neigboring syllable'
last_prefix
last_neighbor
last_neighbor_nme
fixed_last_syll <- rbind(last_intercept, last_nme, last_prs, last_prefix, last_neighbor, last_neighbor_nme)
fixed_last_syll
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With nominal ending and vowel letter in neigboring syllable',
'With vowel letter in neigboring syllable',
'With Prefix',
'With Pronominal Suffix',
'With Nominal Ending',
'Intercept Torah'))
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT')
fixed_last_syll$Probability <- fixed_last_syll$condition_mean |> logit2prob
fixed_last_syll$Probability <- fixed_last_syll$condition_mean |> logit2prob()
fixed_last_syll
fixed_last_syll$.lower_prob <- fixed_last_syll$.lower |> logit2prob()
fixed_last_syll$.upper_prob <- fixed_last_syll$.upper |> logit2prob()
fixed_last_syll
fixed_last_syll %>%
ggplot(aes(y = feature, x = Probability, xmin = .lower_prob, xmax = .upper_prob)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT')
fixed_last_syll %>%
ggplot(aes(y = feature, x = Probability, xmin = .lower_prob, xmax = .upper_prob)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch')
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch')
fixed_last_syll %>%
ggplot(aes(y = feature, x = Probability, xmin = .lower_prob, xmax = .upper_prob)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch')
model_vars
fixed_draws_last <- trace_mt %>%
spread_draws(b_Intercept,
b_law_phase1,
`b_has_prs1:law_phase1`, `b_law_phase1:has_nme1`, `b_law_phase1:has_prefix1`, `b_law_phase1:neigh_vowel_letter1`,
b_has_prefix1, b_has_prs1, b_has_nme1, b_neigh_vowel_letter1,
`b_has_nme1:neigh_vowel_letter1`, `b_law_phase1:has_nme1:neigh_vowel_letter1`
)
fixed_draws_last <- trace_mt %>%
spread_draws(b_Intercept,
b_law_phase1,
`b_has_prs1:law_phase1`, `b_law_phase1:has_nme1`, `b_law_phase1:has_prefix1`, `b_law_phase1:neigh_vowel_letter1`,
b_has_prefix1, b_has_prs1, b_has_nme1, b_neigh_vowel_letter1,
`b_has_nme1:neigh_vowel_letter1`, `b_law_phase1:has_nme1:neigh_vowel_letter1`
)
head(fixed_draws_last)
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1, .width = c(.95, .66))
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1, .width = c(.95, .66))
last_intercept$feature <- 'Intercept Former Prophets'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1 + b_has_nme1 + `b_law_phase1:has_nme1`, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
last_prs <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1 + b_has_prs1 + b_has_prs1:law_phase1, .width = c(.95, .66))
last_prs$feature <- 'With Pronominal Suffix'
last_prefix <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1 + b_has_prefix1 + `b_law_phase1:has_prefix1`, .width = c(.95, .66))
last_prefix$feature <- 'With Prefix'
last_neighbor <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1 + b_neigh_vowel_letter1 + `b_law_phase1:neigh_vowel_letter1`, .width = c(.95, .66))
last_neighbor$feature <- 'With vowel letter in neigboring syllable'
last_neighbor_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_law_phase1 + b_has_nme1 + b_neigh_vowel_letter1 + `b_law_phase1:has_nme1` +
`b_has_nme1:neigh_vowel_letter1` + `b_law_phase1:neigh_vowel_letter1` + `b_law_phase1:has_nme1:neigh_vowel_letter1`
, .width = c(.95, .66))
last_neighbor_nme$feature <- 'With nominal ending and vowel letter in neigboring syllable'
last_prefix
last_neighbor
last_neighbor_nme
fixed_last_syll <- rbind(last_intercept, last_nme, last_prs, last_prefix, last_neighbor, last_neighbor_nme)
fixed_last_syll
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With nominal ending and vowel letter in neigboring syllable',
'With vowel letter in neigboring syllable',
'With Prefix',
'With Pronominal Suffix',
'With Nominal Ending',
'Intercept Former Prophets'))
fixed_last_syll$Probability <- fixed_last_syll$condition_mean |> logit2prob()
fixed_last_syll$.lower_prob <- fixed_last_syll$.lower |> logit2prob()
fixed_last_syll$.upper_prob <- fixed_last_syll$.upper |> logit2prob()
fixed_last_syll
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch')
fixed_last_syll %>%
ggplot(aes(y = feature, x = Probability, xmin = .lower_prob, xmax = .upper_prob)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch')
