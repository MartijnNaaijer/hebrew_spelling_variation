head(dat)
table(dat$law_phase2)
unique(dat$law_phase2)
text_sizes = theme(
plot.title = element_text(size = 20),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 14),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 20))
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$qsp <- as.factor(dat$qsp)
head(dat)
str(dat)
levels(dat$scr_book2)
################################################################################
lex_df <- dat$lex |> unique() |> as.data.frame()
colnames(lex_df) <- c('lex')
head(lex_df)
lex_df$last_char <- lex_df$lex |> str_replace('/', '') |> str_replace_all('=', '') |> str_sub(-1,-1)
lex_df |> filter(last_char == 'N')
variation_lex_type_list <- list()
for (lex_t in unique(dat$lex_type)) {
lex_type_df <- dat %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
dat_var <- do.call('rbind', variation_lex_type_list) |> droplevels()
dat_var <- dat_var[order(dat_var$tf_id),]
dim(dat)
str(dat_var)
colnames(dat_var)
last_df <- dat_var |> filter(type == 'last') |> droplevels()
first_df <- dat_var |> filter(type == 'first') |> droplevels()
single_df <- dat_var |> filter(type == 'single') |> droplevels()
dim(single_df)
dim(last_df)
dim(first_df)
#################################################################################
# NEEDED FOR CLUSTERING IN FILE clustering_regression_results.R
phase_book_df <- first_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_first.csv',
row.names=FALSE)
phase_book_df <- last_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_last.csv',
row.names=FALSE)
phase_book_df <- single_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_single.csv',
row.names=FALSE)
################################################################################
dim(first_df)
unique(last_df$law_phase2)
dim(last_df)
dim(single_df)
table(single_df$has_suffix, single_df$has_vowel_letter, single_df$law_phase2)
add_lex_vl <- function(df) {
# Add most frequent vowel letter occurring in a lexeme.
last_vl <- as.data.frame.matrix(table(df$lex, df$vowel_letter))
last_vl$V1 <- NULL
max_vowel_idcs <- max.col(last_vl)
last_lex_vl <- data.frame(lex=rownames(last_vl), lex_vl=colnames(last_vl)[max_vowel_idcs])
df <- merge(df, last_lex_vl, by='lex')
df$lex_vl <- as.factor(df$lex_vl)
df$lex_vl <- relevel(df$lex_vl, ref = "W")
df$lex_vl2 <- as.factor(ifelse(df$lex_vl %in% c('W', '>'), 'non-yod', 'yod'))
return(df)
}
last_df <- last_df |> add_lex_vl()
first_df <- first_df |> add_lex_vl()
single_df <- single_df |> add_lex_vl()
head(last_df)
first_df |> filter(lex == '<CN=/')
last_df_mt <- last_df |> filter(scroll == 'MT')
first_df_mt <- first_df |> filter(scroll == 'MT')
single_df_mt <- single_df |> filter(scroll == 'MT')
table(last_df_mt$lex_vl, last_df_mt$has_vowel_letter)
table(first_df_mt$lex_vl, first_df_mt$has_vowel_letter)
table(single_df_mt$lex_vl, single_df_mt$has_vowel_letter)
table(last_df$has_suffix, last_df$has_vowel_letter, last_df$lex_vl)
table(first_df$has_suffix, first_df$has_vowel_letter, first_df$lex_vl)
table(single_df$has_suffix, single_df$has_vowel_letter, single_df$lex_vl)
last_df_w <- last_df |> filter(lex_vl =='W')
table(last_df_w$has_suffix, last_df_w$has_vowel_letter, last_df_w$law_phase2)
last_df_j <- last_df |> filter(lex_vl =='J')
table(last_df_j$has_suffix, last_df_j$has_vowel_letter, last_df_j$law_phase2)
last_df_aleph <- last_df |> filter(lex_vl =='>')
dim(last_df_aleph)
table(last_df$qsp_sp)
prop.table(table(first_df$lex_vl))
first_df_w_mt <- first_df_w |> filter(scroll == 'MT')
table(first_df$lex_vl)
first_df_w <- first_df |> filter(lex_vl =='W')
table(first_df_w$has_suffix, first_df_w$has_vowel_letter, first_df_w$law_phase2)
first_df_j <- first_df |> filter(lex_vl =='J')
table(first_df_j$has_suffix, first_df_j$has_vowel_letter, first_df_j$law_phase2)
first_df_aleph <- first_df |> filter(lex_vl =='>')
dim(first_df_aleph)
unique(first_df_j$lex)
table(last_df_w$has_hloc, last_df_w$law_phase3)
head(first_df_w_mt)
first_df_w_mt <- first_df_w |> filter(scroll == 'MT') |>
filter(law_phase3 == 'MT Pentateuch') |>
droplevels()
dim(first_df_w_mt)
head(first_df_w_mt)
first_df_w_mt |> filter(lex == 'MWPT/')
mwpt <- first_df_w_mt |> filter(lex == 'MWPT/')
mwpt <- first_df_w_mt |> filter(lex == 'MWPT/') |> filter(law_phase3 == 'MT Pentateuch')
mwpt <- first_df_w_mt |> filter(lex == 'MWPT/') # |> filter(law_phase3 == 'MT Pentateuch')
table(mwpt$has_prefix, mwpt$has_vowel_letter, mwpt$law_phase3)
mwpt <- first_df_w |> filter(lex == 'MWPT/') # |> filter(law_phase3 == 'MT Pentateuch')
table(mwpt$has_prefix, mwpt$has_vowel_letter, mwpt$law_phase3)
table(mwpt$has_suffix, mwpt$has_vowel_letter, mwpt$law_phase3)
mwpt <- first_df_w |> filter(lex == 'MW<D/') # |> filter(law_phase3 == 'MT Pentateuch')
table(mwpt$has_suffix, mwpt$has_vowel_letter, mwpt$law_phase3)
table(mwad$has_suffix, mwad$has_vowel_letter, mwad$law_phase3)
mwad <- first_df_w |> filter(lex == 'MW<D/') # |> filter(law_phase3 == 'MT Pentateuch')
table(mwad$has_suffix, mwad$has_vowel_letter, mwad$law_phase3)
table(mwad$has_prefix, mwad$has_vowel_letter, mwad$law_phase3)
table(mwad$has_suffix, mwad$has_vowel_letter, mwad$law_phase3)
mwad <- first_df_w |> filter(lex == '>ZN/') # |> filter(law_phase3 == 'MT Pentateuch')
table(mwad$has_prefix, mwad$has_vowel_letter, mwad$law_phase3)
mwad <- first_df_w |> filter(lex == 'MXRT/') # |> filter(law_phase3 == 'MT Pentateuch')
table(mwad$has_prefix, mwad$has_vowel_letter, mwad$law_phase3)
table(mwad$has_suffix, mwad$has_vowel_letter, mwad$law_phase3)
file_path_bayes_model_mt_sp_dss_first_n0_j <- file.path(MODEL_FOLDER, 'bayes_model_mt_sp_dss_first_n0_j.rds')
bayes_model_mt_sp_dss_first_n0_j <- readRDS(file_path_bayes_model_mt_sp_dss_first_n0_j)
summary(bayes_model_mt_sp_dss_first_n0_j)
vars_first_yod <- get_variables(bayes_model_mt_sp_dss_first_n0_j)
vars_first_yod
fixed_draws_first_n0_j <- bayes_model_mt_sp_dss_first_n0_j %>%
spread_draws(b_Intercept
)
summary_first_n0_j_prefix <- fixed_draws_first_n0_j %>%
transmute(
'Intercept' = b_Intercept,
) %>%
gather() %>%
group_by(key) %>%
mean_hdi(.width = c(.95, .66))
labels_first_n0_j_prefix <- c(
'Intercept'
)
summary_first_n0_j_prefix$key <- factor(summary_first_n0_j_prefix$key,
levels = labels_first_n0_j_prefix)
summary_first_n0_j_prefix %>%
ggplot(aes(y = key, x = value, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('')
ggsave(file.path(IMAGE_FOLDER, 'model_first_j.png'))
table(first_df_j$has_vowel_letter)
model_vars_last_n2_j <- get_variables(bayes_model_mt_sp_dss_last_n2_j)
prior_intercept_prob_last_j <- mean(as.numeric(as.character(last_df_j$has_vowel_letter)))
prior_intercept_logit_last_j <- prob2logit(prior_intercept_prob_last_j)
prior_intercept_prob_last_j
dim(last_df_j)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
library(ggmcmc)
library(coda)
library(bayestestR) # p_direction
library(binom)
IMAGE_FOLDER <- 'C:/Users/geitb/Dropbox/monograph_orthography/nouns_adjectives/images_nouns_adjectives'
scripts_path <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs'
functions_path <- file.path(scripts_path, 'functions.R')
config_path <- file.path(scripts_path, 'config.R')
source(functions_path)
source(config_path)
DATASET <- 'nouns_adjectives.csv'
dat <- import_bib_data(DATA_FOLDER, DATASET)
dat <- dat |>
remove_ketiv_qere() |>
add_col_has_suffix() |>
make_book2_column() |>
make_scr_book2_column() |>
make_law_phase_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS) |>
make_law_phase2_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS, QSP_SCROLLS, law_phase2_levels) |>
make_law_phase3_column(QSP_SCROLLS, law_phase3_levels) |>
split_isaiah_scroll() |>
make_factor_columns(factor_columns) |>
droplevels()
str(dat)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP',
ifelse(dat$scroll == 'MT', 'MT',
ifelse(dat$scroll == 'SP', 'SP', 'Other')))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
colnames(dat)
head(dat)
table(dat$law_phase2)
unique(dat$law_phase2)
text_sizes = theme(
plot.title = element_text(size = 20),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 14),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 20))
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$qsp <- as.factor(dat$qsp)
head(dat)
str(dat)
levels(dat$scr_book2)
################################################################################
lex_df <- dat$lex |> unique() |> as.data.frame()
colnames(lex_df) <- c('lex')
head(lex_df)
lex_df$last_char <- lex_df$lex |> str_replace('/', '') |> str_replace_all('=', '') |> str_sub(-1,-1)
lex_df |> filter(last_char == 'N')
variation_lex_type_list <- list()
for (lex_t in unique(dat$lex_type)) {
lex_type_df <- dat %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
dat_var <- do.call('rbind', variation_lex_type_list) |> droplevels()
dat_var <- dat_var[order(dat_var$tf_id),]
dim(dat)
str(dat_var)
colnames(dat_var)
last_df <- dat_var |> filter(type == 'last') |> droplevels()
first_df <- dat_var |> filter(type == 'first') |> droplevels()
single_df <- dat_var |> filter(type == 'single') |> droplevels()
dim(single_df)
dim(last_df)
dim(first_df)
#################################################################################
# NEEDED FOR CLUSTERING IN FILE clustering_regression_results.R
phase_book_df <- first_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_first.csv',
row.names=FALSE)
phase_book_df <- last_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_last.csv',
row.names=FALSE)
phase_book_df <- single_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_single.csv',
row.names=FALSE)
################################################################################
dim(first_df)
unique(last_df$law_phase2)
dim(last_df)
dim(single_df)
table(single_df$has_suffix, single_df$has_vowel_letter, single_df$law_phase2)
add_lex_vl <- function(df) {
# Add most frequent vowel letter occurring in a lexeme.
last_vl <- as.data.frame.matrix(table(df$lex, df$vowel_letter))
last_vl$V1 <- NULL
max_vowel_idcs <- max.col(last_vl)
last_lex_vl <- data.frame(lex=rownames(last_vl), lex_vl=colnames(last_vl)[max_vowel_idcs])
df <- merge(df, last_lex_vl, by='lex')
df$lex_vl <- as.factor(df$lex_vl)
df$lex_vl <- relevel(df$lex_vl, ref = "W")
df$lex_vl2 <- as.factor(ifelse(df$lex_vl %in% c('W', '>'), 'non-yod', 'yod'))
return(df)
}
last_df <- last_df |> add_lex_vl()
first_df <- first_df |> add_lex_vl()
single_df <- single_df |> add_lex_vl()
head(last_df)
first_df |> filter(lex == '<CN=/')
last_df_mt <- last_df |> filter(scroll == 'MT')
first_df_mt <- first_df |> filter(scroll == 'MT')
single_df_mt <- single_df |> filter(scroll == 'MT')
table(last_df_mt$lex_vl, last_df_mt$has_vowel_letter)
table(first_df_mt$lex_vl, first_df_mt$has_vowel_letter)
table(single_df_mt$lex_vl, single_df_mt$has_vowel_letter)
table(last_df$has_suffix, last_df$has_vowel_letter, last_df$lex_vl)
table(first_df$has_suffix, first_df$has_vowel_letter, first_df$lex_vl)
table(single_df$has_suffix, single_df$has_vowel_letter, single_df$lex_vl)
last_df_w <- last_df |> filter(lex_vl =='W')
table(last_df_w$has_suffix, last_df_w$has_vowel_letter, last_df_w$law_phase2)
last_df_j <- last_df |> filter(lex_vl =='J')
table(last_df_j$has_suffix, last_df_j$has_vowel_letter, last_df_j$law_phase2)
last_df_aleph <- last_df |> filter(lex_vl =='>')
dim(last_df_aleph)
table(last_df$qsp_sp)
prop.table(table(first_df$lex_vl))
first_df_w_mt <- first_df_w |> filter(scroll == 'MT')
table(first_df$lex_vl)
first_df_w <- first_df |> filter(lex_vl =='W')
table(first_df_w$has_suffix, first_df_w$has_vowel_letter, first_df_w$law_phase2)
first_df_j <- first_df |> filter(lex_vl =='J')
table(first_df_j$has_suffix, first_df_j$has_vowel_letter, first_df_j$law_phase2)
first_df_aleph <- first_df |> filter(lex_vl =='>')
dim(first_df_aleph)
unique(first_df_j$lex)
table(last_df_w$has_hloc, last_df_w$law_phase3)
head(first_df_w_mt)
first_df_w_mt <- first_df_w |> filter(scroll == 'MT') |>
filter(law_phase3 == 'MT Pentateuch') |>
droplevels()
dim(first_df_w_mt)
head(first_df_w_mt)
head(last_df_j)
unique(last_df_j$lex)
lexemes <- unique(last_df_j$lex)
lexemes <- unique(last_df_j$lex)
for (lex1 in lexemes){
lex_df <- last_df_j |> filter(lex == lex1)
table(lex_df$has_suffix, lex_df$has_vowel_letter)
}
for (lex1 in lexemes){
lex_df <- last_df_j |> filter(lex == lex1)
print(table(lex_df$has_suffix, lex_df$has_vowel_letter))
}
for (lex1 in lexemes){
lex_df <- last_df_j |> filter(lex == lex1)
print(lex1)
print(table(lex_df$has_suffix, lex_df$has_vowel_letter))
print('')
}
last_df_j |> filter(lex == 'NFJ</')
last_df_j |> filter(lex == 'NFJ>/')
kol <- single_df_w |> filter(lex == 'KL/') |> filter(has_vowel_letter == 0)
last_df_j |> filter(lex == 'NFJ>/') |> filter(has_vowel_letter == 0)
last_df_j |> filter(lex == 'NFJ>/') |> filter(prs == 'J')
last_df_j |> filter(lex == 'NFJ>/') |> filter(prs == 'HM')
last_df_j |> filter(lex == 'NFJ>/') |> filter(!scroll %in% c('SP', 'MT'))
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
library(ggmcmc)
library(coda)
library(bayestestR) # p_direction
library(binom)
IMAGE_FOLDER <- 'C:/Users/geitb/Dropbox/monograph_orthography/nouns_adjectives/images_nouns_adjectives'
scripts_path <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs'
functions_path <- file.path(scripts_path, 'functions.R')
config_path <- file.path(scripts_path, 'config.R')
source(functions_path)
source(config_path)
DATASET <- 'nouns_adjectives.csv'
dat <- import_bib_data(DATA_FOLDER, DATASET)
dat <- dat |>
remove_ketiv_qere() |>
add_col_has_suffix() |>
make_book2_column() |>
make_scr_book2_column() |>
make_law_phase_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS) |>
make_law_phase2_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS, QSP_SCROLLS, law_phase2_levels) |>
make_law_phase3_column(QSP_SCROLLS, law_phase3_levels) |>
split_isaiah_scroll() |>
make_factor_columns(factor_columns) |>
droplevels()
str(dat)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP',
ifelse(dat$scroll == 'MT', 'MT',
ifelse(dat$scroll == 'SP', 'SP', 'Other')))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
colnames(dat)
head(dat)
table(dat$law_phase2)
unique(dat$law_phase2)
text_sizes = theme(
plot.title = element_text(size = 20),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 14),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 20))
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$qsp <- as.factor(dat$qsp)
head(dat)
str(dat)
levels(dat$scr_book2)
################################################################################
lex_df <- dat$lex |> unique() |> as.data.frame()
colnames(lex_df) <- c('lex')
head(lex_df)
lex_df$last_char <- lex_df$lex |> str_replace('/', '') |> str_replace_all('=', '') |> str_sub(-1,-1)
lex_df |> filter(last_char == 'N')
variation_lex_type_list <- list()
for (lex_t in unique(dat$lex_type)) {
lex_type_df <- dat %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
dat_var <- do.call('rbind', variation_lex_type_list) |> droplevels()
dat_var <- dat_var[order(dat_var$tf_id),]
dim(dat)
str(dat_var)
colnames(dat_var)
last_df <- dat_var |> filter(type == 'last') |> droplevels()
first_df <- dat_var |> filter(type == 'first') |> droplevels()
single_df <- dat_var |> filter(type == 'single') |> droplevels()
dim(single_df)
dim(last_df)
dim(first_df)
#################################################################################
# NEEDED FOR CLUSTERING IN FILE clustering_regression_results.R
phase_book_df <- first_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_first.csv',
row.names=FALSE)
phase_book_df <- last_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_last.csv',
row.names=FALSE)
phase_book_df <- single_df |>  distinct(law_phase2, scr_book2)
write.csv(phase_book_df,
'C:/Users/geitb/Dropbox/monograph_orthography/cluster_analysis/phase_book_na_single.csv',
row.names=FALSE)
################################################################################
dim(first_df)
unique(last_df$law_phase2)
dim(last_df)
dim(single_df)
table(single_df$has_suffix, single_df$has_vowel_letter, single_df$law_phase2)
add_lex_vl <- function(df) {
# Add most frequent vowel letter occurring in a lexeme.
last_vl <- as.data.frame.matrix(table(df$lex, df$vowel_letter))
last_vl$V1 <- NULL
max_vowel_idcs <- max.col(last_vl)
last_lex_vl <- data.frame(lex=rownames(last_vl), lex_vl=colnames(last_vl)[max_vowel_idcs])
df <- merge(df, last_lex_vl, by='lex')
df$lex_vl <- as.factor(df$lex_vl)
df$lex_vl <- relevel(df$lex_vl, ref = "W")
df$lex_vl2 <- as.factor(ifelse(df$lex_vl %in% c('W', '>'), 'non-yod', 'yod'))
return(df)
}
last_df <- last_df |> add_lex_vl()
first_df <- first_df |> add_lex_vl()
single_df <- single_df |> add_lex_vl()
head(last_df)
first_df |> filter(lex == '<CN=/')
last_df_mt <- last_df |> filter(scroll == 'MT')
first_df_mt <- first_df |> filter(scroll == 'MT')
single_df_mt <- single_df |> filter(scroll == 'MT')
table(last_df_mt$lex_vl, last_df_mt$has_vowel_letter)
table(first_df_mt$lex_vl, first_df_mt$has_vowel_letter)
table(single_df_mt$lex_vl, single_df_mt$has_vowel_letter)
table(last_df$has_suffix, last_df$has_vowel_letter, last_df$lex_vl)
table(first_df$has_suffix, first_df$has_vowel_letter, first_df$lex_vl)
table(single_df$has_suffix, single_df$has_vowel_letter, single_df$lex_vl)
last_df_w <- last_df |> filter(lex_vl =='W')
table(last_df_w$has_suffix, last_df_w$has_vowel_letter, last_df_w$law_phase2)
last_df_j <- last_df |> filter(lex_vl =='J')
table(last_df_j$has_suffix, last_df_j$has_vowel_letter, last_df_j$law_phase2)
last_df_aleph <- last_df |> filter(lex_vl =='>')
dim(last_df_aleph)
table(last_df$qsp_sp)
prop.table(table(first_df$lex_vl))
first_df_w_mt <- first_df_w |> filter(scroll == 'MT')
table(first_df$lex_vl)
first_df_w <- first_df |> filter(lex_vl =='W')
table(first_df_w$has_suffix, first_df_w$has_vowel_letter, first_df_w$law_phase2)
first_df_j <- first_df |> filter(lex_vl =='J')
table(first_df_j$has_suffix, first_df_j$has_vowel_letter, first_df_j$law_phase2)
first_df_aleph <- first_df |> filter(lex_vl =='>')
dim(first_df_aleph)
unique(first_df_j$lex)
table(last_df_w$has_hloc, last_df_w$law_phase3)
head(first_df_w_mt)
first_df_w_mt <- first_df_w |> filter(scroll == 'MT') |>
filter(law_phase3 == 'MT Pentateuch') |>
droplevels()
dim(first_df_w_mt)
head(first_df_w_mt)
lexemes <- unique(first_df_w_mt$lex)
lexemes
for (lex1 in lexemes) {
lex_df <- first_df_w_mt |> filter(lex == lex1)
print(lex1)
print(table(lex_df$has_prefix, lex_df$has_vowel_letter))
print('')
}
jbl_mt <- first_df |> filter(scroll == 'MT') |> filter(lex == 'JWBL/')
table(last_df_j$lex)
last_df_j <- last_df |> filter(lex_vl =='J') |> droplevels()
table(last_df_j$has_suffix, last_df_j$has_vowel_letter, last_df_j$law_phase2)
last_df_aleph <- last_df |> filter(lex_vl =='>')
dim(last_df_aleph)
table(last_df$qsp_sp)
prop.table(table(first_df$lex_vl))
first_df_w_mt <- first_df_w |> filter(scroll == 'MT')
table(first_df$lex_vl)
table(last_df_j$lex)
sorted(table(last_df_j$lex))
sort(table(last_df_j$lex))
