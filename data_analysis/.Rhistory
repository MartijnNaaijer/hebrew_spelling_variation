'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
dat$law_phase2 <- factor(dat$law_phase2, levels=law_phase2_levels)
dat[is.na(dat$law_phase2),]
dim(dat)
head(dat)
table(dat$scroll)
table(dat$qsp_sp)
mt_sp <- dat |> filter(scroll %in% c('SP', 'MT'))
str(mt_sp)
mt_sp <- droplevels(mt_sp)
table(mt_sp$type2)
dim(dat)
table(dat$scroll)
head(dat)
table(dat$qsp_sp)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
sort(table(dat$lex))
head(dat)
unique(dat$lex)
dat |> filter(ay_ay == 1) |> tail(20)
table(dat$ay_ay, dat$has_vowel_letter)
table(dat$i_yod, dat$has_vowel_letter)
table(dat$iii_h, dat$has_vowel_letter)
table(dat$iii_alef, dat$has_vowel_letter)
table(dat$i_nun, dat$has_vowel_letter)
head(dat)
table(dat$scr_book2)
gsI <- dat |> filter(scroll == '1QisaaI') |> droplevels()
gsII <- dat |> filter(scroll == '1QisaaII') |> droplevels()
table(gsI$has_vowel_letter)
table(gsII$has_vowel_letter)
mt_isa <- dat |> filter(scroll == 'MT' & book == 'Isaiah') |> droplevels()
table(mt_isa$has_vowel_letter)
8/93
3/13
38/51
# DATA EXPLORATION
mt_pent_df <- mt_sp |> filter(law_phase2 == 0)
sp_df <- mt_sp |> filter(law_phase2 == 1)
fp_df <- mt_sp |> filter(law_phase2 == 2)
lbh_df <- mt_sp |> filter(law_phase2 == 3)
# suffix
table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter)
prop.table(table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter), margin=1)
table(sp_df$has_suffix, sp_df$has_vowel_letter)
prop.table(table(sp_df$has_suffix, sp_df$has_vowel_letter), margin=1)
table(fp_df$has_suffix, fp_df$has_vowel_letter)
prop.table(table(fp_df$has_suffix, fp_df$has_vowel_letter), margin=1)
table(lbh_df$has_suffix, lbh_df$has_vowel_letter)
prop.table(table(lbh_df$has_suffix, lbh_df$has_vowel_letter), margin=1)
# first radical
mt <- dat |> filter(scroll == 'MT')
mt$first_radical <- substr(mt$lex, 1, 1)
table(mt$first_radical, mt$has_vowel_letter)
prop.table(table(mt$first_radical, mt$has_vowel_letter), margin=1)
fit_brm_model <- function(data, formula, warmup, iter, adapt_delta) {
trace <- brm(formula = formula,
prior = set_prior("normal(0, 5)", class = "Intercept") +
set_prior("normal(0, 5)", class = "b"),
data = data,
family = bernoulli(link = "logit"),
warmup = warmup,
iter = iter,
chains = 4,
cores=4,
control = list(adapt_delta = adapt_delta),
save_pars = save_pars(all = TRUE),
seed = 123)
return(trace)
}
source('functions.R')
source('./functions.R')
source('./functions.R')
getwd()
func_path <- file.path('C:/Users/geitb/Dropbox/monograph_orthography/verbs', 'functions.R')
source(func_path)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
library(bayestestR)
# import functions
func_path <- file.path('C:/Users/geitb/Dropbox/monograph_orthography/verbs', 'functions.R')
source(func_path)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('1Qisaa', '1QisaaI', '1QisaaII', '2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/infc_qal_triliteral.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
# remove ketive/qere
dat <- dat[!(nchar(dat$pattern) == 0 & dat$scroll == 'MT'),]
dat$has_suffix <- as.factor(as.numeric(dat$has_prs | dat$has_nme | dat$has_hloc))
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_hloc <- as.factor(dat$has_hloc)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$book2 <- dat$book %>% str_replace('1_', '') |> str_replace('2_', '')
table(dat$book2)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
dat$scr_book2 <- paste(dat$scroll, dat$book2, sep='_')
mt_sp_books <- unique(dat$scr_book2)
mt_sp_books
dat$scr_book2 <- factor(dat$scr_book2, levels = mt_sp_books)
unique(dat$scr_book2)
dat$book2 <- as.factor(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'MT', 'MT', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$law_phase2 <- ifelse(dat$book %in% LAW_BOOKS, 'Pent',
ifelse(dat$book %in% EBH_BOOKS, 'FP',
ifelse(dat$book %in% LBH_BOOKS, 'LBH',
'Other')))
dat$law_phase2 <- ifelse(!dat$scroll %in% c(c('MT', 'SP'), QSP_SCROLLS), paste0(dat$law_phase2, '_non_QSP'),
ifelse(dat$scroll %in% QSP_SCROLLS, paste0(dat$law_phase2, '_QSP'),
ifelse(dat$scroll == 'SP', paste0(dat$law_phase2, '_SP'),
dat$law_phase2)))
dat$law_phase2 <- as.factor(dat$law_phase2)
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
dat$law_phase2 <- factor(dat$law_phase2, levels=law_phase2_levels)
dat[is.na(dat$law_phase2),]
dim(dat)
head(dat)
table(dat$scroll)
table(dat$qsp_sp)
mt_sp <- dat |> filter(scroll %in% c('SP', 'MT'))
str(mt_sp)
mt_sp <- droplevels(mt_sp)
table(mt_sp$type2)
dim(dat)
table(dat$scroll)
head(dat)
table(dat$qsp_sp)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
sort(table(dat$lex))
head(dat)
unique(dat$lex)
dat |> filter(ay_ay == 1) |> tail(20)
table(dat$ay_ay, dat$has_vowel_letter)
table(dat$i_yod, dat$has_vowel_letter)
table(dat$iii_h, dat$has_vowel_letter)
table(dat$iii_alef, dat$has_vowel_letter)
table(dat$i_nun, dat$has_vowel_letter)
head(dat)
table(dat$scr_book2)
gsI <- dat |> filter(scroll == '1QisaaI') |> droplevels()
gsII <- dat |> filter(scroll == '1QisaaII') |> droplevels()
table(gsI$has_vowel_letter)
table(gsII$has_vowel_letter)
mt_isa <- dat |> filter(scroll == 'MT' & book == 'Isaiah') |> droplevels()
table(mt_isa$has_vowel_letter)
8/93
3/13
38/51
# DATA EXPLORATION
mt_pent_df <- mt_sp |> filter(law_phase2 == 0)
sp_df <- mt_sp |> filter(law_phase2 == 1)
fp_df <- mt_sp |> filter(law_phase2 == 2)
lbh_df <- mt_sp |> filter(law_phase2 == 3)
# suffix
table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter)
prop.table(table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter), margin=1)
table(sp_df$has_suffix, sp_df$has_vowel_letter)
prior_intercept_prob <- mean(as.numeric(as.character(dat$has_vowel_letter)))
prior_intercept_logit <- prob2logit(prior_intercept_prob)
prior_intercept_logit
formula_infc <- has_vowel_letter ~
has_suffix*law_phase2 +
has_prefix*law_phase2 +
(has_suffix + has_prefix | scr_book2) +
(has_suffix + has_prefix | lex_type)
formula_infc <- has_vowel_letter ~
has_suffix*law_phase2 +
has_prefix*law_phase2 +
(has_suffix + has_prefix | scr_book2) +
(has_suffix + has_prefix | lex_type)
bayes_model_infc <- fit_brm_model(dat,
formula_infc,
3000, 6000, 0.99,
prior_intercept_logit)
prior_intercept_logit
prior_intercept_prob <- mean(as.numeric(as.character(dat$has_vowel_letter)))
prior_intercept_logit <- prob2logit(prior_intercept_prob)
# import functions
func_path <- file.path('C:/Users/geitb/Dropbox/monograph_orthography/verbs', 'functions.R')
source(func_path)
dat <- droplevels(dat)
prior_intercept_prob <- mean(as.numeric(as.character(dat$has_vowel_letter)))
prior_intercept_logit <- prob2logit(prior_intercept_prob)
prior_intercept_logit
formula_infc <- has_vowel_letter ~
has_suffix*law_phase2 +
has_prefix*law_phase2 +
(has_suffix + has_prefix | scr_book2) +
(has_suffix + has_prefix | lex_type)
bayes_model_infc <- fit_brm_model(dat,
formula_infc,
3000, 6000, 0.99,
prior_intercept_logit)
formula_infc2 <- has_vowel_letter ~
law_phase2 +
(1 | scr_book2) +
(1 | lex_type)
bayes_model_infc2 <- fit_brm_model(dat,
formula_infc2,
3000, 6000, 0.99,
prior_intercept_logit)
file_path_mt_dss_infc <- file.path(MODEL_FOLDER, 'bayes_model_mt_dss_infc.rds')
file_path_mt_dss_infc <- file.path(MODEL_FOLDER, 'bayes_model_mt_dss_infc.rds')
saveRDS(bayes_model_infc2, file = file_path_mt_dss_infc)
trace_mt <- readRDS(file_path_mt_dss_infc)
bayes_R2(trace_mt)
summary(bayes_model_infc2)
# MAKE TABLE OF SUMMARY WITH PROBAB OF DIRECTION
library(htmlTable)
library(kableExtra)
library(magick)
IMAGE_FOLDER <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs/trilit_infc'
fixed <- summary(trace_mt)$fixed
fixed$Rhat <- sprintf('%.2f', fixed$Rhat)
summary(trace_mt)
IMAGE_FOLDER <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs/trilit_infc'
fixed <- summary(trace_mt)$fixed
fixed$Rhat <- sprintf('%.2f', fixed$Rhat)
round_names <- c('Estimate', 'Est.Error', 'l-95% CI', 'u-95% CI')
for (name in round_names) {
fixed[,name] <- fixed[,name] |> round(2)
}
fixed$Bulk_ESS <- round(fixed$Bulk_ESS, 0)
fixed$Tail_ESS <- round(fixed$Tail_ESS, 0)
p_dir <- trace_mt |> p_direction()
fixed$pd <- round(p_dir$pd,2)
fixed |> htmlTable() |>
save_kable(file = file.path(IMAGE_FOLDER, 'trilit_infc_table.png'))
table(dat$law_phase2)
random_intercept <- ranef(trace_mt)$scr_book2[,,'Intercept'] |> as.data.frame()
random_intercept <- random_intercept[order(random_intercept$Estimate),]
random_intercept$lex_type <- factor(rownames(random_intercept), levels=rownames(random_intercept))
head(random_intercept, 30)
tail(random_intercept, 40)
random_intercept %>%
ggplot(aes(y = lex_type, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('Random Intercept')
fixed_draws <- trace_mt %>%
spread_draws(               b_Intercept,
b_law_phase2FP, b_law_phase2LBH,
b_law_phase2Other,  b_law_phase2Pent_non_QSP,
b_law_phase2FP_non_QSP, b_law_phase2LBH_non_QSP,
b_law_phase2Other_non_QSP,  b_law_phase2Pent_QSP,
b_law_phase2FP_QSP, b_law_phase2Other_QSP,
)
summary_infc <- fixed_draws %>%
transmute('MT Pentateuch' = b_Intercept,
'MT Former Prophets' = b_Intercept + b_law_phase2FP,
'MT LBH' = b_Intercept + b_law_phase2LBH,
'MT Other' = b_Intercept + b_law_phase2Other,
'DSS Pentateuch non-QSP' = b_Intercept + b_law_phase2Pent_non_QSP,
'DSS Former Prophets non-QSP' = b_Intercept + b_law_phase2FP_non_QSP,
'DSS LBH non-QSP' = b_Intercept + b_law_phase2LBH_non_QSP,
'DSS Other non-QSP' = b_Intercept + b_law_phase2Other_non_QSP,
'DSS Pentateuch QSP' = b_Intercept + b_law_phase2Pent_QSP,
'DSS Former Prophets QSP' = b_Intercept + b_law_phase2FP_QSP,
'DSS Other QSP' = b_Intercept +  b_law_phase2Other_QSP,
) %>%
gather() %>%
group_by(key) %>%
mean_hdi(.width = c(.95, .66))
labels_infc <- c(
'DSS Other QSP',
'DSS Former Prophets QSP',
'DSS Pentateuch QSP',
'DSS Other non-QSP',
'DSS LBH non-QSP',
'DSS Former Prophets non-QSP',
'DSS Pentateuch non-QSP',
'MT Other',
'MT LBH',
'MT Former Prophets',
'MT Pentateuch'
)
summary_infc$key <- factor(summary_infc$key, levels = labels_infc)
summary_infc %>%
ggplot(aes(y = key, x = value, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Logodds of a vowel letter in qal infinitive construct verbs in MT and biblical DSS')
fixed_draws <- trace_mt %>%
spread_draws(               b_Intercept,  b_has_suffix1,
b_law_phase2FP, b_law_phase2LBH,
b_law_phase2Other,  b_law_phase2Pent_non_QSP,
b_law_phase2FP_non_QSP, b_law_phase2LBH_non_QSP,
b_law_phase2Other_non_QSP,  b_law_phase2Pent_QSP,
b_law_phase2FP_QSP, b_law_phase2Other_QSP,
b_has_prefix1,  `b_has_suffix1:law_phase2FP`,
`b_has_suffix1:law_phase2LBH`,  `b_has_suffix1:law_phase2Other`,
`b_has_suffix1:law_phase2Pent_non_QSP`, `b_has_suffix1:law_phase2FP_non_QSP`,
`b_has_suffix1:law_phase2LBH_non_QSP`,  `b_has_suffix1:law_phase2Other_non_QSP`,
`b_has_suffix1:law_phase2Pent_QSP`,
`b_has_suffix1:law_phase2FP_QSP`,
`b_has_suffix1:law_phase2Other_QSP`,  `b_law_phase2FP:has_prefix1`,
`b_law_phase2LBH:has_prefix1`,  `b_law_phase2Other:has_prefix1`,
`b_law_phase2Pent_non_QSP:has_prefix1`, `b_law_phase2FP_non_QSP:has_prefix1`,
`b_law_phase2LBH_non_QSP:has_prefix1`,  `b_law_phase2Other_non_QSP:has_prefix1`,
`b_law_phase2Pent_QSP:has_prefix1`, `b_law_phase2FP_QSP:has_prefix1`,
`b_law_phase2Other_QSP:has_prefix1`
)
head(fixed_draws)
summary_first_prefix_mt <- fixed_draws %>%
transmute('Intercept MT Pentateuch' = b_Intercept,
'With Prefix MT Pentateuch' = b_Intercept + b_has_prefix1,
'Intercept MT Former Prophets' = b_Intercept + b_law_phase2FP,
'With Prefix MT Former Prophets' = b_Intercept + b_has_prefix1 + b_law_phase2FP + `b_law_phase2FP:has_prefix1`,
'Intercept MT LBH' = b_Intercept + b_law_phase2LBH,
'With Prefix MT LBH' = b_Intercept + b_has_prefix1 + b_law_phase2LBH + `b_law_phase2LBH:has_prefix1`,
'Intercept MT Other' = b_Intercept + b_law_phase2Other,
'With Prefix MT Other' = b_Intercept + b_has_prefix1 + b_law_phase2Other + `b_law_phase2Other:has_prefix1`,
) %>%
gather() %>%
group_by(key) %>%
mean_hdi(.width = c(.95, .66))
random_intercept %>%
ggplot(aes(y = lex_type, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('Random Intercept')
tail(random_intercept, 40)
LBH_BOOKS
LBH_BOOKS |> unique()
LBH_BOOKS |> str_replace('1_', '') |> str_replace('2_', '') |> unique()
lbh_books <- LBH_BOOKS |> str_replace('1_', '') |> str_replace('2_', '') |> unique()
lbh_books <- LBH_BOOKS |> str_replace('1_', '') |> str_replace('2_', '') |> unique() |> str_c('MT_')
lbh_books
str_c('MT_', lbh_books)
lbh_books <- LBH_BOOKS |> str_replace('1_', '') |> str_replace('2_', '') |> unique()
lbh_books <- str_c('MT_', lbh_books)
lbh_books
head(random_intercept, 30)
random_intercept$book <- factor(rownames(random_intercept), levels=rownames(random_intercept))
random_intercept <- ranef(trace_mt)$scr_book2[,,'Intercept'] |> as.data.frame()
random_intercept <- random_intercept[order(random_intercept$Estimate),]
random_intercept$book <- factor(rownames(random_intercept), levels=rownames(random_intercept))
head(random_intercept, 30)
random_intercept |> filter(book %in% lbh_books)
ri_lbh <- random_intercept |> filter(book %in% lbh_books)
ri_lbh %>%
ggplot(aes(y = book, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('Random Intercept')
dat_lbh <- dat |> filter(scroll == 'MT' & book %in% LBH_BOOKS)
table(dat_lbh$book, dat_lbh$has_vowel_letter)
dat_lbh <- dat |> filter(scroll == 'MT' & book %in% LBH_BOOKS) |> droplevels()
table(dat_lbh$book, dat_lbh$has_vowel_letter)
table(dat_lbh$book2, dat_lbh$has_vowel_letter)
ri_lbh %>%
ggplot(aes(y = book, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('')
# FP books
fp_books <- c("Joshua", "Judges", "Samuel", "Kings")
# FP books
fp_books <- c("Joshua", "Judges", "Samuel", "Kings")
fp_books <- str_c('MT_', fp_books)
fp_books
ri_lbh <- random_intercept |> filter(book %in% fp_books)
ri_lbh %>%
ggplot(aes(y = book, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('')
dat_fp <- dat |> filter(scroll == 'MT' & book2 %in% fp_books) |> droplevels()
table(dat_fp$book2, dat_fp$has_vowel_letter)
dat_fp <- dat |> filter(scroll == 'MT' & book2 %in% fp_books) |> droplevels()
table(dat_fp$book2, dat_fp$has_vowel_letter)
dat_fp
dat_fp <- dat |> filter(scroll == 'MT' & book %in% fp_books) |> droplevels()
dat_fp
fp_books
# FP books
fp_books <- c("Joshua", "Judges", "Samuel", "Kings")
fp_books_mt <- str_c('MT_', fp_books)
fp_books_mt
ri_lbh <- random_intercept |> filter(book %in% fp_books_mt)
ri_lbh %>%
ggplot(aes(y = book, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('')
dat_fp <- dat |> filter(scroll == 'MT' & book %in% fp_books) |> droplevels()
dat_fp
table(dat_fp$book2, dat_fp$has_vowel_letter)
dat_fp <- dat |> filter(scroll == 'MT' & book2 %in% fp_books) |> droplevels()
dat_fp
table(dat_fp$book2, dat_fp$has_vowel_letter)
random_intercept <- ranef(trace_mt)$lex_type[,,'Intercept'] |> as.data.frame()
random_intercept <- random_intercept[order(random_intercept$Estimate),]
random_intercept$lex_type <- factor(rownames(random_intercept), levels=rownames(random_intercept))
head(random_intercept, 30)
tail(random_intercept, 40)
random_intercept %>%
ggplot(aes(y = lex_type, x = Estimate, xmin = Q2.5, xmax = Q97.5)) +
geom_pointinterval() +
ggtitle('Random Intercept')
head(random_intercept, 30)
# Last radical
mt <- dat |> filter(scroll == 'MT')
mt$last_radical <- substr(mt$lex, 3, 3)
table(mt$last_radical, mt$has_vowel_letter)
prop.table(table(mt$last_radical, mt$has_vowel_letter), margin=1)
sort(prop.table(table(mt$sec_radical, mt$has_vowel_letter), margin=1))
prop.table(table(mt$sec_radical, mt$has_vowel_letter), margin=1)
prop.table(table(mt$sec_radical, mt$has_vowel_letter), margin=1)
# second radical
mt <- dat |> filter(scroll == 'MT')
mt$sec_radical <- substr(mt$lex, 2, 2)
table(mt$sec_radical, mt$has_vowel_letter)
prop.table(table(mt$sec_radical, mt$has_vowel_letter), margin=1)
# Last radical
mt <- dat |> filter(scroll == 'MT')
mt$last_radical <- substr(mt$lex, 3, 3)
table(mt$last_radical, mt$has_vowel_letter)
prop.table(table(mt$last_radical, mt$has_vowel_letter), margin=1)
slx <- dat |> filter(lex == 'CLX[')
head(slx)
table(slx$law_phase2, slx$has_vowel_letter)
unique(dat$lex)
amr <- dat |> filter(lex == '>MR[')
table(amr$law_phase2, amr$has_vowel_letter)
tail(random_intercept, 40)
head(random_intercept, 30)
tail(random_intercept, 40)
amr <- dat |> filter(lex == 'VMN[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == 'VBX[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == 'NTC[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == 'NTY[')
table(amr$law_phase2, amr$has_vowel_letter)
tail(random_intercept, 40)
amr <- dat |> filter(lex == 'NT<[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == 'NV<[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == 'DRC[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == '<BR[')
table(amr$law_phase2, amr$has_vowel_letter)
amr <- dat |> filter(lex == 'VMN[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
amr <- dat |> filter(lex == 'MLK[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
amr <- dat |> filter(lex == 'NTY[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
amr <- dat |> filter(lex == 'NTC[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
amr <- dat |> filter(lex == 'NTY[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
amr <- dat |> filter(lex == 'VBX[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
amr <- dat |> filter(lex == 'KNS[')
table(amr$law_phase2, amr$has_vowel_letter)
amr
