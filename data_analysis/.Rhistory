dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$qsp <- as.factor(dat$qsp)
mt_sp <- dat |> filter(scroll %in% c('MT', 'SP')) |>
filter(book %in% LAW_BOOKS)
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
variation_lex_type_list[[lex_t]] <- lex_typ_df
}
}
mt_var <- do.call('rbind', variation_lex_type_list)
mt_var <- mt_var[order(mt_var$tf_id),]
head(mt_var)
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
non_variation_lex_type_list[[lex_t]] <- lex_typ_df
}
}
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} #else {
#non_variation_lex_type_list[[lex_t]] <- lex_typ_df
#}
}
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
non_variation_lex_type_list[[lex_t]] <- lex_typ_df
}
}
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
non_variation_lex_type_list[[lex_t]] <- lex_type_df
} #else {
#non_variation_lex_type_list[[lex_t]] <- lex_typ_df
#}
}
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
#non_variation_lex_type_list[[lex_t]] <- lex_typ_df
print(lex_t)
}
}
mt_sp <- dat |> filter(scroll %in% c('MT', 'SP')) |>
filter(book %in% LAW_BOOKS)
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
#non_variation_lex_type_list[[lex_t]] <- lex_typ_df
print('aap')
}
}
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
#non_variation_lex_type_list[[lex_t]] <- lex_typ_df
print('aap')
print(dim(lex_typ_df))
}
}
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
#non_variation_lex_type_list[[lex_t]] <- lex_type_df
print('aap')
print(dim(lex_type_df))
}
}
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
#non_variation_lex_type_list[[lex_t]] <- lex_type_df
print(lex_t)
print(dim(lex_type_df))
}
}
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} #else {
#non_variation_lex_type_list[[lex_t]] <- lex_type_df
#print(lex_t)
#print(dim(lex_type_df))
#}
}
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} #else {
#non_variation_lex_type_list[[lex_t]] <- lex_type_df
#print(lex_t)
#print(dim(lex_type_df))
#}
}
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} #else {
#non_variation_lex_type_list[[lex_t]] <- lex_type_df
#print(lex_t)
#print(dim(lex_type_df))
#}
}
mt_non_var <- do.call('rbind', non_variation_lex_type_list)
mt_non_var <- mt_non_var[order(mt_non_var$tf_id),]
head(mt_non_var)
non_variation_lex_type_list
variation_lex_type_list <- list()
non_variation_lex_type_list <- list()
for (lex_t in unique(mt_sp$lex_type)) {
lex_type_df <- mt_sp %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
} else {
non_variation_lex_type_list[[lex_t]] <- lex_type_df
print(lex_t)
print(dim(lex_type_df))
}
}
mt_non_var <- do.call('rbind', non_variation_lex_type_list)
mt_non_var <- mt_non_var[order(mt_non_var$tf_id),]
head(mt_non_var)
length(unique(mt_non_var$lex_type))
mt_var <- do.call('rbind', variation_lex_type_list)
mt_var <- mt_var[order(mt_var$tf_id),]
head(mt_var)
levels(mt_var$type)
dim(mt_var)
length(unique(mt_var$lex_type))
table(mt_non_var$lex_type)
sort(table(mt_non_var$lex_type))
sort(table(mt_non_var$lex_type)) > 0
mt_non_var <- droplevels(mt_non_var)
sort(table(mt_non_var$lex_type))
names(sort(table(mt_non_var$lex_type)))
non_varying_lex_t <- names(sort(table(mt_non_var$lex_type)))
print(unique(lex_t_df$scroll))
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type]
print(unique(lex_t_df$scroll))
}
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_typ]
print(unique(lex_t_df$scroll))
}
colnames(mt_sp)
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
print(unique(lex_t_df$scroll))
}
print(has_vowel)
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
if (length(unique(lex_t_df$scroll)) == 2) {
has_vowel <- unique(lex_t_df$has_vowel_letter)
print(has_vowel)
}
}
colnames(dat)
print(unique(opposite_vowel_df$scr_book2))
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
if (length(unique(lex_t_df$scroll)) == 2) {
has_vowel <- unique(lex_t_df$has_vowel_letter)
whole_dat_lex_t <- dat |> filter(lex_type == lex_t)
opposite_vowel_df <- whole_dat_lex_t |> filter(has_vowel_letter != has_vowel)
print(unique(opposite_vowel_df$scr_book2))
}
}
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
if (length(unique(lex_t_df$scroll)) == 2) {
has_vowel <- unique(lex_t_df$has_vowel_letter)
whole_dat_lex_t <- dat |> filter(lex_type == lex_t)
opposite_vowel_df <- whole_dat_lex_t |> filter(has_vowel_letter != has_vowel)
print(lex_t_df)
print(unique(opposite_vowel_df$scr_book2))
print(' ')
}
}
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
if (length(unique(lex_t_df$scroll)) == 2) {
has_vowel <- unique(lex_t_df$has_vowel_letter)
whole_dat_lex_t <- dat |> filter(lex_type == lex_t)
opposite_vowel_df <- whole_dat_lex_t |> filter(has_vowel_letter != has_vowel)
print(lex_t)
print(unique(opposite_vowel_df$scr_book2))
print(' ')
}
}
non_varying_lex_t <- names(sort(table(mt_non_var$lex_type), decreasing = FALSE))
non_varying_lex_t
non_varying_lex_t <- names(sort(table(mt_non_var$lex_type), decreasing = TRUE))
non_varying_lex_t
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
if (length(unique(lex_t_df$scroll)) == 2) {
has_vowel <- unique(lex_t_df$has_vowel_letter)
whole_dat_lex_t <- dat |> filter(lex_type == lex_t)
opposite_vowel_df <- whole_dat_lex_t |> filter(has_vowel_letter != has_vowel)
print(lex_t)
print(unique(opposite_vowel_df$scr_book2))
print(' ')
}
}
non_varying_lex_t <- names(sort(table(mt_non_var$lex_type), decreasing = TRUE))
non_varying_lex_t
for (lex_t in non_varying_lex_t) {
lex_t_df <- mt_sp[mt_sp$lex_type == lex_t,]
if (length(unique(lex_t_df$scroll)) == 2) {
has_vowel <- unique(lex_t_df$has_vowel_letter)
whole_dat_lex_t <- dat |> filter(lex_type == lex_t)
opposite_vowel_df <- whole_dat_lex_t |> filter(has_vowel_letter != has_vowel)
print(lex_t)
print(unique(opposite_vowel_df$scr_book2))
print(has_vowel)
print(' ')
}
}
sp <- droplevels(sp)
sp <- dat |> filter(scroll == 'SP')
sp <- droplevels(sp)
lex_types_sp <- sp$lex_type
length(lex_types_sp)
lex_types_sp <- unique(sp$lex_type)
length(lex_types_sp)
dat |> filter(lex_type %in% lex_types_sp)
dat_lex_types_from_sp <- dat |> filter(lex_type %in% lex_types_sp)
dat_lex_types_from_sp |> group_by(scr_book)
dat_lex_types_from_sp |> group_by(scr_book2)
dat_lex_types_from_sp |>
dat_lex_types_from_sp |>
group_by(scr_book2, lex_type) |>
summarise(mean_vowel_letter=mean(has_vowel_letter))
dat_lex_types_from_sp |>
group_by(scr_book2, lex_type) |>
summarise(mean_vowel_letter=mean(has_vowel_letter))
dat_lex_types_from_sp |>
group_by(scr_book2, lex_type) |>
summarise(mean_vowel_letter=mean(as.numeric(as.character(has_vowel_letter))))
scr_lex_t_mean_vl <- dat_lex_types_from_sp |>
group_by(scr_book2, lex_type) |>
summarise(mean_vowel_letter=mean(as.numeric(as.character(has_vowel_letter))))
hist(scr_lex_t_mean_vl$mean_vowel_letter)
data_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[0:10, 0:10]
vl_wide <- vl_wide[is.na(vl_wide)] <- 0
vl_wide
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[is.na(vl_wide)] <- 0
vl_wide
dist(vl_wide)
hclust(dist(vl_wide))
plot(hclust(dist(vl_wide)))
plot(hclust(dist(t(vl_wide))))
plot(hclust(dist(t(vl_wide))))
t(vl_wide
t(vl_wide)
t(vl_wide)
str(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide[1:10, 1:10]
vl_wide <- as.data.frame(vl_wide)
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
str(vl_wide)
vl_wide[is.na(vl_wide)] <- 0
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide[1:10, 1:10]
plot(hclust(dist(t(vl_wide))))
plot(hclust(dist((vl_wide))))
table(dat_lex_types_from_sp$scr_book2)
table(dat_lex_types_from_sp$scr_book2) > 100
scr_book_count[scr_book_count > 50]
scr_book2_count[scr_book2_count > 50]
scr_book2_count <- table(dat_lex_types_from_sp$scr_book2)
scr_book2_count[scr_book2_count > 50]
freq_scr_books <- scr_book2_count[scr_book2_count > 50]
freq_scr_books <- names(scr_book2_count[scr_book2_count > 50])
freq_scr_books
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books]
vl_wide[1:10, 1:10]
vl_wide
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books]
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books,]
vl_wide[1:10, 1:10]
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
for(i in 1:ncol(vl_wide)){
vl_wide[is.na(vl_wide[,i]), i] <- mean(vl_wide[,i], na.rm = TRUE)
}
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[is.na(vl_wide)] <- 1
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books,]
vl_wide[1:10, 1:10]
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[is.na(vl_wide)] <- 0.5
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books,]
vl_wide[1:10, 1:10]
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[is.na(vl_wide)] <- 0.1
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books,]
vl_wide[1:10, 1:10]
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books,]
vl_wide <- vl_wide |> filter(!scr_book2 %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_NUmbers', 'MT_Deuteronomy'))
vl_wide <- vl_wide[rownames(vl_wide) %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_NUmbers', 'MT_Deuteronomy')]
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[is.na(vl_wide)] <- 0.1
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide <- vl_wide[rownames(vl_wide) %in% freq_scr_books,]
vl_wide <- vl_wide[!rownames(vl_wide) %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_NUmbers', 'MT_Deuteronomy')]
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[1:10, 1:10]
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[1:10, 1:10]
vl_wide <- vl_wide[vl_wide$scr_book2 %in% freq_scr_books,]
vl_wide <- vl_wide[!vl_wide$scr_book2 %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_NUmbers', 'MT_Deuteronomy')]
vl_wide <- vl_wide[!vl_wide$scr_book2 %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_NUmbers', 'MT_Deuteronomy'),]
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[1:10, 1:10]
vl_wide <- vl_wide[vl_wide$scr_book2 %in% freq_scr_books,]
vl_wide <- vl_wide[!vl_wide$scr_book2 %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_NUmbers', 'MT_Deuteronomy'),]
vl_wide[is.na(vl_wide)] <- 0.1
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[1:10, 1:10]
vl_wide <- vl_wide[vl_wide$scr_book2 %in% freq_scr_books,]
vl_wide <- vl_wide[!vl_wide$scr_book2 %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_Numbers', 'MT_Deuteronomy'),]
vl_wide[is.na(vl_wide)] <- 0.1
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide
plot(hclust(dist((vl_wide))))
vl_wide <- spread(scr_lex_t_mean_vl, lex_type, mean_vowel_letter)
vl_wide[1:10, 1:10]
vl_wide <- vl_wide[vl_wide$scr_book2 %in% freq_scr_books,]
vl_wide <- vl_wide[!vl_wide$scr_book2 %in% c('MT_Genesis', 'MT_Exodus', 'MT_Leviticus', 'MT_Numbers', 'MT_Deuteronomy'),]
vl_wide[is.na(vl_wide)] <- 1
vl_wide <- as.data.frame(vl_wide)
rownames(vl_wide) <- vl_wide$scr_book2
vl_wide$scr_book2 <- NULL
vl_wide
plot(hclust(dist((vl_wide))))
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/nouns_adjectives.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
dat$has_suffix <- as.factor(as.numeric(dat$has_prs | dat$has_nme | dat$has_hloc))
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_hloc <- as.factor(dat$has_hloc)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$neigh_vowel_letter <- as.factor(dat$neigh_vowel_letter)
dat$type <- as.factor(dat$type)
dat$book2 <- dat$book %>% str_replace('1_', '') |> str_replace('2_', '')
table(dat$book2)
dat$book2 <- as.factor(dat$book2)
mt <- dat |> filter(scroll == 'MT')
mt_books <- unique(mt$book2)
dat$book2 <- factor(dat$book2, levels = mt_books)
str(dat)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$qsp <- as.factor(dat$qsp)
mt <- dat %>% filter(scroll == 'MT')
head(mt)
gen <- dat |> filter(book == 'Genesis')
table(gen$qsp, gen$scroll)
gen <- droplevels(gen)
table(gen$qsp, gen$scroll)
gen <- dat |> filter(book == 'Exodus')
gen <- droplevels(gen)
table(gen$qsp, gen$scroll)
gen <- dat |> filter(book == 'Leviticus')
gen <- droplevels(gen)
table(gen$qsp, gen$scroll)
gen <- dat |> filter(book == 'Numbers')
gen <- droplevels(gen)
table(gen$qsp, gen$scroll)
