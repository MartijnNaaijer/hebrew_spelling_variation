first_intercept <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst, .width = c(.95, .66))
first_intercept$feature <- 'Intercept'
first_nme <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst + b_has_nme1 + `b_typefirst:has_nme1`, .width = c(.95, .66))
first_nme$feature <- 'With Nominal Ending'
first_prs <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst + b_has_prs1 + `b_has_prs1:typefirst`, .width = c(.95, .66))
first_prs$feature <- 'With Pronominal Suffix'
first_prefix <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst + b_has_prefix1 + `b_typefirst:has_prefix1`, .width = c(.95, .66))
first_prefix$feature <- 'With Prefix'
fixed_first_syll <- rbind(first_intercept, first_nme, first_prs, first_prefix)
fixed_first_syll
fixed_first_syll$feature <- factor(fixed_first_syll$feature, levels = c('With Prefix', 'With Pronominal Suffix', 'With Nominal Ending', 'Intercept'))
fixed_first_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the first syllable in MT Pentateuch and SP')
fixed_draws_single <- trace_pent %>%
spread_draws(b_Intercept,
b_typesingle, `b_typesingle:has_nme1`, `b_typesingle:has_prefix1`, `b_has_prs1:typesingle`,
b_has_prefix1, b_has_prs1, b_has_nme1,
)
fixed_draws_single <- trace_pent %>%
spread_draws(b_Intercept,
b_typesingle, `b_typesingle:has_nme1`, `b_typesingle:has_prefix1`, `b_has_prs1:typesingle`,
b_has_prefix1, b_has_prs1, b_has_nme1,
)
head(fixed_draws_single)
single_intercept <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle, .width = c(.95, .66))
single_intercept$feature <- 'Intercept'
single_nme <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle + b_has_nme1 + `b_typesingle:has_nme1`, .width = c(.95, .66))
single_nme$feature <- 'With Nominal Ending'
single_prs <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle + b_has_prs1 + `b_has_prs1:typesingle`, .width = c(.95, .66))
single_prs$feature <- 'With Pronominal Suffix'
single_prefix <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle + b_has_prefix1 + `b_typesingle:has_prefix1`, .width = c(.95, .66))
single_prefix$feature <- 'With Prefix'
fixed_single_syll <- rbind(single_intercept, single_nme, single_prs, single_prefix)
fixed_single_syll
fixed_single_syll$feature <- factor(fixed_single_syll$feature, levels = c('With Prefix', 'With Pronominal Suffix', 'With Nominal Ending', 'Intercept'))
fixed_single_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the single syllable in MT Pentateuch and SP')
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch and SP')
dat_selected |> filter(lex == '>LHJM/')
dat_selected |> filter(lex == 'VWB//')
dat_selected |> filter(lex == 'VWB/')
tov <- dat_selected |> filter(lex == 'VWB/')
table(dat_selected$scr_book)
head(mt)
mt <- dat_selected |> filter(scroll == 'MT')
sp <- dat_selected |> filter(scroll == 'SP')
head(mt)
mt_last <- mt |> filter(type == 'last')
sp_last <- sp |> filter(type == 'last')
table(mt_last$has_nme, mt_last$has_vowel_letter)
table(sp_last$has_nme, sp_last$has_vowel_letter)
table(mt_last$has_prs, mt_last$has_vowel_letter)
table(sp_last$has_prs, sp_last$has_vowel_letter)
kavod <- dat_selected |> filter(lex == 'KBWD/')
table(kavod$scroll_book, kavod$has_vowel_letter)
table(kavod$scr_book, kavod$has_vowel_letter)
library(tidyverse)
library(lme4)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'1Qisaa', '4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
data_folder <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data'
dat <- read.csv(file.path(data_folder, 'nouns_adjectives.csv'), sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
dat$has_suffix <- dat$has_prs | dat$has_nme
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_suffix <- as.factor(dat$has_suffix)
dat$has_nme <- as.factor(dat$has_nme)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$lex_type <- paste(dat$lex, dat$type, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$book2 <- dat$book %>% str_replace('1_', '') %>% str_replace('2_', '')
table(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp <- ifelse(dat$scroll %in% QSP_SCROLLS, 1, 0)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
head(dat)
dim(dat)
dat_tript <- dat |>
filter(scroll %in% c('MT', 'SP')) |>
filter(book %in% LAW_BOOKS)
head(dat)
dim(dat)
dat_pent <- dat |>
filter(scroll %in% c('MT', 'SP')) |>
filter(book %in% LAW_BOOKS)
dat_pent$scr_book <- str_c(dat_pent$scroll, dat_pent$book, sep='_')
head(dat_pent)
select_variable_lex_types <- function(df) {
variation_lex_type_list <- list()
for (lex_t in unique(df$lex_type)) {
lex_type_df <- df %>% filter(lex_type == lex_t)
lt_vowels <- unique(lex_type_df$has_vowel_letter)
if (length(lt_vowels) > 1) {
variation_lex_type_list[[lex_t]] <- lex_type_df
}
}
var_lex_type_df <- do.call('rbind', variation_lex_type_list)
var_lex_type_df <- var_lex_type_df[order(var_lex_type_df$tf_id),]
return(var_lex_type_df)
}
dat_pent_selected <- select_variable_lex_types(dat_pent)
length(unique(dat_pent_selected$lex))
table(dat_pent_selected$lex)
#########################################################################################
dat_pent_selected <- droplevels(dat_pent_selected)
length(unique(dat_pent_selected$lex))
table(dat_pent_selected$lex)
sorted(table(dat_pent_selected$scr_book))
sort(table(dat_pent_selected$scr_book))
sort(table(dat_pent_selected$lex))
dat_pent_selected |> filter(lex == 'QR/')
dat_pent_selected |> filter(lex == 'KBDT/')
dat_pent_selected |> filter(lex == '<VWP/')
dat_pent_selected |> filter(lex == '<KBR/')
dat_pent_selected |> filter(lex == '<RWM/')
dat_pent_selected |> filter(lex == '<RQJ/')
trace_pent <- readRDS(file_path_mt_sp)
file_path_mt_sp <- file.path(MODEL_FOLDER, 'sp_mt_affixes.rds')
trace_pent <- readRDS(file_path_mt_sp)
mt_draws_random_scr_book <- trace_pent %>%
spread_draws(r_scr_book[scr_book,term])
dim(trace_pent)
length(trace_pent)
dim(mt_draws_random_scr_book)
data_wide <- spread(mt_draws_random_scr_book, term, r_scr_book)
scr_books <- rev(unique(dat_pent_selected$scr_book))
scr_books
data_wide$scr_book <- factor(data_wide$scr_book, levels=scr_books)
colnames(data_wide)
dim(data_wide)
fixed_draws_last <- trace_pent %>%
spread_draws(b_Intercept,
b_has_prefix1, b_has_prs1, b_has_nme1,
)
head(fixed_draws_last)
last_intercept <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept, .width = c(.95, .66))
last_intercept$feature <- 'Intercept'
last_nme <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_nme1, .width = c(.95, .66))
last_nme$feature <- 'With Nominal Ending'
last_prs <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prs1, .width = c(.95, .66))
last_prs$feature <- 'With Pronominal Suffix'
last_prefix <- fixed_draws_last %>%
median_qi(condition_mean = b_Intercept + b_has_prefix1, .width = c(.95, .66))
last_prefix$feature <- 'With Prefix'
fixed_last_syll <- rbind(last_intercept, last_nme, last_prs, last_prefix)
fixed_last_syll
fixed_last_syll$feature <- factor(fixed_last_syll$feature, levels = c('With Prefix', 'With Pronominal Suffix', 'With Nominal Ending', 'Intercept'))
fixed_last_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the last syllable in MT Pentateuch and SP')
model_vars
fixed_draws_first <- trace_pent %>%
spread_draws(b_Intercept,
b_typefirst, `b_typefirst:has_nme1`, `b_typefirst:has_prefix1`, `b_has_prs1:typefirst`,
b_has_prefix1, b_has_prs1, b_has_nme1,
)
head(fixed_draws_first)
first_intercept <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst, .width = c(.95, .66))
first_intercept$feature <- 'Intercept'
first_nme <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst + b_has_nme1 + `b_typefirst:has_nme1`, .width = c(.95, .66))
first_nme$feature <- 'With Nominal Ending'
first_prs <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst + b_has_prs1 + `b_has_prs1:typefirst`, .width = c(.95, .66))
first_prs$feature <- 'With Pronominal Suffix'
first_prefix <- fixed_draws_first %>%
median_qi(condition_mean = b_Intercept + b_typefirst + b_has_prefix1 + `b_typefirst:has_prefix1`, .width = c(.95, .66))
first_prefix$feature <- 'With Prefix'
fixed_first_syll <- rbind(first_intercept, first_nme, first_prs, first_prefix)
fixed_first_syll
fixed_first_syll$feature <- factor(fixed_first_syll$feature, levels = c('With Prefix', 'With Pronominal Suffix', 'With Nominal Ending', 'Intercept'))
fixed_first_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the first syllable in MT Pentateuch and SP')
fixed_draws_single <- trace_pent %>%
spread_draws(b_Intercept,
b_typesingle, `b_typesingle:has_nme1`, `b_typesingle:has_prefix1`, `b_has_prs1:typesingle`,
b_has_prefix1, b_has_prs1, b_has_nme1,
)
single_intercept <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle, .width = c(.95, .66))
single_intercept$feature <- 'Intercept'
single_nme <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle + b_has_nme1 + `b_typesingle:has_nme1`, .width = c(.95, .66))
single_nme$feature <- 'With Nominal Ending'
single_prs <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle + b_has_prs1 + `b_has_prs1:typesingle`, .width = c(.95, .66))
single_prs$feature <- 'With Pronominal Suffix'
single_prefix <- fixed_draws_single %>%
median_qi(condition_mean = b_Intercept + b_typesingle + b_has_prefix1 + `b_typesingle:has_prefix1`, .width = c(.95, .66))
single_prefix$feature <- 'With Prefix'
fixed_single_syll <- rbind(single_intercept, single_nme, single_prs, single_prefix)
fixed_single_syll
fixed_single_syll$feature <- factor(fixed_single_syll$feature, levels = c('With Prefix', 'With Pronominal Suffix', 'With Nominal Ending', 'Intercept'))
fixed_single_syll %>%
ggplot(aes(y = feature, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Probability of a vowel letter in the single syllable in MT Pentateuch and SP')
intercept_last <- data_wide |>
median_qi(condition_mean = Intercept, .width = c(.95, .66))
# Last with prefix
prefix_effect_last <- data_wide |>
median_qi(condition_mean = Intercept + has_prefix1, .width = c(.95, .66))
intercept_last %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and last syllable intercept')
prefix_effect_last %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and last syllable with prefix')
# Last with nme
nme_effect_last <- data_wide |>
median_qi(condition_mean = has_nme1, .width = c(.95, .66))
nme_effect_last %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and last syllable with nme')
# Last with prs
prs_effect_last <- data_wide |>
median_qi(condition_mean = Intercept + has_prs1, .width = c(.95, .66))
prs_effect_last %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and last syllable with prs')
# First syllable
intercept_first <- data_wide |>
median_qi(condition_mean = Intercept + typefirst, .width = c(.95, .66))
prefix_effect_first <- data_wide |>
median_qi(condition_mean = Intercept + typefirst + has_prefix1 + `typefirst:has_prefix1`, .width = c(.95, .66))
intercept_first %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and first syllable intercept')
prefix_effect_first %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and first syllable with prefix')
nme_effect_first <- data_wide |>
median_qi(condition_mean = Intercept + typefirst + has_nme1 + `typefirst:has_nme1`, .width = c(.95, .66))
nme_effect_first %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and first syllable with nme')
colnames(data_wide)
prs_effect_first <- data_wide |>
median_qi(condition_mean = Intercept + typefirst + has_prs1 + `has_prs1:typefirst`, .width = c(.95, .66))
prs_effect_first %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and first syllable with prs')
intercept_single <- data_wide |>
median_qi(condition_mean = Intercept + typesingle, .width = c(.95, .66))
prefix_effect_single <- data_wide |>
median_qi(condition_mean = Intercept + typesingle + has_prefix1 + `typesingle:has_prefix1`, .width = c(.95, .66))
intercept_single %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and single syllable intercept')
prefix_effect_single %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and single syllable with prefix')
nme_effect_single <- data_wide |>
median_qi(condition_mean = Intercept + typesingle + has_nme1 + `typesingle:has_nme1`, .width = c(.95, .66))
nme_effect_single %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and single syllable with nme')
colnames(data_wide)
prs_effect_single <- data_wide |>
median_qi(condition_mean = Intercept + typesingle + has_prs1 + `has_prs1:typesingle`, .width = c(.95, .66))
prs_effect_single %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: book and single syllable with prs')
#########################################################################################
dat_pent_selected <- droplevels(dat_pent_selected)
length(unique(dat_pent_selected$lex))
sort(table(dat_pent_selected$lex))
dat_pent_selected |> filter(lex == '<L/')
lexemes <- unique(dat_pent_selected$lex)
for (lexe in lexemes) {
lex_df <- dat_pent_selected |> filter(lex == lexe)
}
lexemes <- unique(dat_pent_selected$lex)
for (lexe in lexemes) {
lex_df <- dat_pent_selected |> filter(lex == lexe)
lex_df$bochve <- str_c(lex_df$book, lex_df$chapter, lex_df$verse, sep='_')
mt_lex_df <- lex_df |> filter(scroll == 'MT')
sp_lex_df <- lex_df |> filter(scroll == 'SP')
mt_sections <- unique(mt_lex_df$bochve)
sp_sections <- unique(sp_lex_df$bochve)
in_mt_not_in_sp <- setdiff(mt_sections, sp_sections)
in_sp_not_in_mt <- setdiff(sp_sections, mt_sections)
if (length(in_mt_not_in_sp) > 0) {
print(lexe)
print(in_mt_not_in_sp)
}
if (length(in_sp_not_in_mt) > 0) {
print(lexe)
print(in_sp_not_in_mt)
}
}
for (lexe in lexemes) {
lex_df <- dat_pent_selected |> filter(lex == lexe)
lex_df$bochve <- str_c(lex_df$book, lex_df$chapter, lex_df$verse, sep='_')
mt_lex_df <- lex_df |> filter(scroll == 'MT')
sp_lex_df <- lex_df |> filter(scroll == 'SP')
mt_sections <- unique(mt_lex_df$bochve)
sp_sections <- unique(sp_lex_df$bochve)
in_mt_not_in_sp <- setdiff(mt_sections, sp_sections)
in_sp_not_in_mt <- setdiff(sp_sections, mt_sections)
if (length(in_mt_not_in_sp) > 0) {
print(lexe)
print('IN MT NOT IN SP')
print(in_mt_not_in_sp)
}
if (length(in_sp_not_in_mt) > 0) {
print(lexe)
print('IN SP NOT IN MT')
print(in_sp_not_in_mt)
}
}
for (lexe in lexemes) {
lex_df <- dat_pent_selected |> filter(lex == lexe)
lex_df$bochve <- str_c(lex_df$book, lex_df$chapter, lex_df$verse, sep='_')
mt_lex_df <- lex_df |> filter(scroll == 'MT')
sp_lex_df <- lex_df |> filter(scroll == 'SP')
mt_sections <- unique(mt_lex_df$bochve)
sp_sections <- unique(sp_lex_df$bochve)
in_mt_not_in_sp <- setdiff(mt_sections, sp_sections)
in_sp_not_in_mt <- setdiff(sp_sections, mt_sections)
if (length(in_mt_not_in_sp) > 0) {
print(lexe)
print('IN MT NOT IN SP')
print(in_mt_not_in_sp)
print('')
}
if (length(in_sp_not_in_mt) > 0) {
print(lexe)
print('IN SP NOT IN MT')
print(in_sp_not_in_mt)
print('')
}
}
dat_pent_selected |> filter(lex == '>WT/')
mt_draws_random_scr_book
data_wide
trace_PENT
trace_pent
model_vars
model_vars <- get_variables(trace_pent)
model_vars
mt_draws_random_scr_book_lex_type <- trace_pent %>%
spread_draws(r_scr_book:lex_type[scr_book_lex_type,term])
mt_draws_random_scr_book_lex_type <- trace_pent %>%
spread_draws(`r_scr_book:lex_type`[scr_book_lex_type,term])
mt_draws_random_scr_book_lex_type
data_wide_lex_type <- spread(mt_draws_random_scr_book_lex_type, term, `r_scr_book:lex_type`)
data_wide_lex_type
sp_gen_lex_type <- data_wide_lex_type %>% filter(str_detect(scr_book_lex_type , 'SP_Gen'))
colnames(sp_gen_lex_type)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95, .66))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
intercept_last_sp_gen
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
sp_gen_lex_type <- data_wide_lex_type %>% filter(str_detect(scr_book_lex_type , 'SP_Lev'))
colnames(sp_gen_lex_type)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
sp_gen_lex_type <- data_wide_lex_type %>% filter(str_detect(scr_book_lex_type , 'MT_Lev'))
colnames(sp_gen_lex_type)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
sp_gen_lex_type <- data_wide_lex_type %>% filter(str_detect(scr_book_lex_type , 'MT_Gen'))
colnames(sp_gen_lex_type)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
sp_gen_lex_type <- data_wide_lex_type %>% filter(str_detect(scr_book_lex_type , 'MT_Exo'))
colnames(sp_gen_lex_type)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
sp_gen_lex_type <- data_wide_lex_type %>% filter(str_detect(scr_book_lex_type , 'SP_Gen'))
colnames(sp_gen_lex_type)
intercept_last_sp_gen <- sp_gen_lex_type |>
median_qi(condition_mean = Intercept, .width = c(.95))
intercept_last_sp_gen
intercept_last_sp_gen <- intercept_last_sp_gen[order(intercept_last_sp_gen$condition_mean),]
lex_type_order <- intercept_last_sp_gen$scr_book_lex_type
intercept_last_sp_gen$scr_book_lex_type <- factor(intercept_last_sp_gen$scr_book_lex_type, levels = lex_type_order)
intercept_last_sp_gen %>%
ggplot(aes(y = scr_book_lex_type, x = condition_mean, xmin = .lower, xmax = .upper)) +
geom_pointinterval() +
ggtitle('Random effect: Last Syllable in SP_Genesis, lex and type')
dat_selected |> filter(lex == '>JRM/')
dat_pent_selected |> filter(lex == '>JRM/')
dat_pent_selected |> filter(lex == '<JRM/')
dat_pent_selected |> filter(lex == '<DWT//')
dat_pent_selected |> filter(lex == '<DWT/')
dat_pent_selected |> filter(lex == '<DWT/' & book == 'Deuteronomy')
dat_pent |> filter(lex == '<DWT/' & book == 'Deuteronomy')
dat |> filter(lex == '<DWT/' & book == 'Deuteronomy')
dat_pent_selected |> filter(lex == 'GJ>/')
dat |> filter(lex == 'GJ>/')
