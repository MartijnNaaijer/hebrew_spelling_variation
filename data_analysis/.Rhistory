head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
# remove ketive/qere
dat <- dat[!(nchar(dat$pattern) == 0 & dat$scroll == 'MT'),]
dat$has_suffix <- as.factor(as.numeric(dat$has_prs | dat$has_nme | dat$has_hloc))
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_hloc <- as.factor(dat$has_hloc)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$book2 <- dat$book %>% str_replace('1_', '') |> str_replace('2_', '')
table(dat$book2)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
dat$scr_book2 <- paste(dat$scroll, dat$book2, sep='_')
mt_sp_books <- unique(dat$scr_book2)
mt_sp_books
dat$scr_book2 <- factor(dat$scr_book2, levels = mt_sp_books)
unique(dat$scr_book2)
dat$book2 <- as.factor(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'SP', 'SP', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$law_phase2 <- ifelse(dat$book %in% LAW_BOOKS, 'Pent',
ifelse(dat$book %in% EBH_BOOKS, 'FP',
ifelse(dat$book %in% LBH_BOOKS, 'LBH',
'Other')))
dat$law_phase2 <- ifelse(!dat$scroll %in% c(c('MT', 'SP'), QSP_SCROLLS), paste0(dat$law_phase2, '_non_QSP'),
ifelse(dat$scroll %in% QSP_SCROLLS, paste0(dat$law_phase2, '_QSP'),
ifelse(dat$scroll == 'SP', paste0(dat$law_phase2, '_SP'),
dat$law_phase2)))
dat$law_phase2 <- as.factor(dat$law_phase2)
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
dat$law_phase2 <- factor(dat$law_phase2, levels=law_phase2_levels)
dat[is.na(dat$law_phase2),]
dim(dat)
head(dat)
table(dat$scroll)
table(dat$qsp_sp)
mt_sp <- dat |> filter(scroll %in% c('SP', 'MT'))
str(mt_sp)
mt_sp <- droplevels(mt_sp)
table(mt_sp$type2)
dim(dat)
table(dat$scroll)
head(dat)
table(dat$qsp_sp)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
table(dat$ay_ay, dat$has_vowel_letter)
table(dat$i_yod, dat$has_vowel_letter)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
table(dat$ay_ay, dat$has_vowel_letter)
table(dat$i_yod, dat$has_vowel_letter)
table(dat$iii_h, dat$has_vowel_letter)
table(dat$iii_alef, dat$has_vowel_letter)
table(dat$i_nun, dat$has_vowel_letter)
unique(dat@lex)
unique(dat$lex)
head(dat)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
library(bayestestR)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('1Qisaa', '1QisaaI', '1QisaaII', '2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/infc_qal_triliteral.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
# remove ketive/qere
dat <- dat[!(nchar(dat$pattern) == 0 & dat$scroll == 'MT'),]
dat$has_suffix <- as.factor(as.numeric(dat$has_prs | dat$has_nme | dat$has_hloc))
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_hloc <- as.factor(dat$has_hloc)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$book2 <- dat$book %>% str_replace('1_', '') |> str_replace('2_', '')
table(dat$book2)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
dat$scr_book2 <- paste(dat$scroll, dat$book2, sep='_')
mt_sp_books <- unique(dat$scr_book2)
mt_sp_books
dat$scr_book2 <- factor(dat$scr_book2, levels = mt_sp_books)
unique(dat$scr_book2)
dat$book2 <- as.factor(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'SP', 'SP', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$law_phase2 <- ifelse(dat$book %in% LAW_BOOKS, 'Pent',
ifelse(dat$book %in% EBH_BOOKS, 'FP',
ifelse(dat$book %in% LBH_BOOKS, 'LBH',
'Other')))
dat$law_phase2 <- ifelse(!dat$scroll %in% c(c('MT', 'SP'), QSP_SCROLLS), paste0(dat$law_phase2, '_non_QSP'),
ifelse(dat$scroll %in% QSP_SCROLLS, paste0(dat$law_phase2, '_QSP'),
ifelse(dat$scroll == 'SP', paste0(dat$law_phase2, '_SP'),
dat$law_phase2)))
dat$law_phase2 <- as.factor(dat$law_phase2)
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
dat$law_phase2 <- factor(dat$law_phase2, levels=law_phase2_levels)
dat[is.na(dat$law_phase2),]
dim(dat)
head(dat)
table(dat$scroll)
table(dat$qsp_sp)
mt_sp <- dat |> filter(scroll %in% c('SP', 'MT'))
str(mt_sp)
mt_sp <- droplevels(mt_sp)
table(mt_sp$type2)
dim(dat)
table(dat$scroll)
head(dat)
table(dat$qsp_sp)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
head(dat)
unique(dat$lex)
table(dat$ay_ay, dat$has_vowel_letter)
dat |> filter(ayay== 1)
dat |> filter(ay_ay == 1)
dat |> filter(ay_ay == 1) |> head(50)
dat |> filter(ay_ay == 1) |> tail(20)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
library(bayestestR)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('1Qisaa', '1QisaaI', '1QisaaII', '2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/infc_qal_triliteral.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
# remove ketive/qere
dat <- dat[!(nchar(dat$pattern) == 0 & dat$scroll == 'MT'),]
dat$has_suffix <- as.factor(as.numeric(dat$has_prs | dat$has_nme | dat$has_hloc))
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_hloc <- as.factor(dat$has_hloc)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$book2 <- dat$book %>% str_replace('1_', '') |> str_replace('2_', '')
table(dat$book2)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
dat$scr_book2 <- paste(dat$scroll, dat$book2, sep='_')
mt_sp_books <- unique(dat$scr_book2)
mt_sp_books
dat$scr_book2 <- factor(dat$scr_book2, levels = mt_sp_books)
unique(dat$scr_book2)
dat$book2 <- as.factor(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'SP', 'SP', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$law_phase2 <- ifelse(dat$book %in% LAW_BOOKS, 'Pent',
ifelse(dat$book %in% EBH_BOOKS, 'FP',
ifelse(dat$book %in% LBH_BOOKS, 'LBH',
'Other')))
dat$law_phase2 <- ifelse(!dat$scroll %in% c(c('MT', 'SP'), QSP_SCROLLS), paste0(dat$law_phase2, '_non_QSP'),
ifelse(dat$scroll %in% QSP_SCROLLS, paste0(dat$law_phase2, '_QSP'),
ifelse(dat$scroll == 'SP', paste0(dat$law_phase2, '_SP'),
dat$law_phase2)))
dat$law_phase2 <- as.factor(dat$law_phase2)
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
dat$law_phase2 <- factor(dat$law_phase2, levels=law_phase2_levels)
dat[is.na(dat$law_phase2),]
dim(dat)
head(dat)
table(dat$scroll)
table(dat$qsp_sp)
mt_sp <- dat |> filter(scroll %in% c('SP', 'MT'))
str(mt_sp)
mt_sp <- droplevels(mt_sp)
table(mt_sp$type2)
dim(dat)
table(dat$scroll)
head(dat)
table(dat$qsp_sp)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
head(dat)
unique(dat$lex)
table(dat$llex)
table(dat$lex)
sort(table(dat$lex))
# DATA EXPLORATION
#install.packages('binom')
library(binom)
fullness_df <- dat |> group_by(law_phase2) |> summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
477/547
hpd_fullness$law_phase2 <- fullness_df$law_phase2
groups <- c('Pent', 'FP', 'LBH', 'Other', 'Pent_non_QSP',
'FP_non_QSP','LBH_non_QSP' ,'Other_non_QSP', 'Pent_QSP', 'FP_QSP', 'Other_QSP')
hpd_fullness$law_phase2 <- factor(hpd_fullness$law_phase2, levels=groups)
hpd_fullness
ggplot(data = hpd_fullness, aes(x = law_phase2, y = mean)) +
geom_bar(stat = "identity", color = "black", position = position_dodge()) +
labs(x = '', y = 'Fraction of full spelling') + #, fill = "Ayin Ayin") +
geom_errorbar( aes(x=law_phase2, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3,
position = position_dodge(0.9)) +
theme_minimal() +
theme(text = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
fullness_df <- dat |> group_by(law_phase2) |> summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$law_phase2 <- fullness_df$law_phase2
hpd_fullness
fullness_df
fullness_df
fulness_df$law_phase2 <- c('MT Pentateuch', 'MT Former Prophets', 'MT LBH', 'MT Other',
'Non-QSP Pentateuch', 'Non-QSP Former Prophets',
'Non-QSP LBH', 'Non-QSP Other',
'QSP Pentateuch', 'Non-QSP Former Prophets', 'QSP Other')
fullness_df <- dat |> group_by(law_phase2) |> summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
fulness_df$law_phase2 <- c('MT Pentateuch', 'MT Former Prophets', 'MT LBH', 'MT Other',
'Non-QSP Pentateuch', 'Non-QSP Former Prophets',
'Non-QSP LBH', 'Non-QSP Other',
'QSP Pentateuch', 'Non-QSP Former Prophets', 'QSP Other')
fullness_df$law_phase2 <- c('MT Pentateuch', 'MT Former Prophets', 'MT LBH', 'MT Other',
'Non-QSP Pentateuch', 'Non-QSP Former Prophets',
'Non-QSP LBH', 'Non-QSP Other',
'QSP Pentateuch', 'Non-QSP Former Prophets', 'QSP Other')
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$law_phase2 <- fullness_df$law_phase2
hpd_fullness$law_phase2 <- factor(hpd_fullness$law_phase2, levels=hpd_fullness$law_phase2)
fullness_df$law_phase2 <- c('MT Pentateuch', 'MT Former Prophets', 'MT LBH', 'MT Other',
'Non-QSP Pentateuch', 'Non-QSP Former Prophets',
'Non-QSP LBH', 'Non-QSP Other',
'QSP Pentateuch', 'QSP Former Prophets', 'QSP Other')
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$law_phase2 <- fullness_df$law_phase2
groups <- c('Pent', 'FP', 'LBH', 'Other', 'Pent_non_QSP',
'FP_non_QSP','LBH_non_QSP' ,'Other_non_QSP', 'Pent_QSP', 'FP_QSP', 'Other_QSP')
hpd_fullness$law_phase2 <- factor(hpd_fullness$law_phase2, levels=unique(hpd_fullness$law_phase2))
hpd_fullness
ggplot(data = hpd_fullness, aes(x = law_phase2, y = mean)) +
geom_bar(stat = "identity", color = "black", position = position_dodge()) +
labs(x = '', y = 'Fraction of full spelling') + #, fill = "Ayin Ayin") +
geom_errorbar( aes(x=law_phase2, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3,
position = position_dodge(0.9)) +
theme_minimal() +
theme(text = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# prefix
table(dat$has_prefix, dat$has_vowel_letter)
# suffix
table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter)
# DATA EXPLORATION
mt_pent_df <- mt_sp |> filter(law_phase2 == 0)
sp_df <- mt_sp |> filter(law_phase2 == 1)
fp_df <- mt_sp |> filter(law_phase2 == 2)
lbh_df <- mt_sp |> filter(law_phase2 == 3)
# suffix
table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter)
prop.table(table(mt_pent_df$has_suffix, mt_pent_df$has_vowel_letter), margin=1)
table(sp_df$has_suffix, sp_df$has_vowel_letter)
prop.table(table(sp_df$has_suffix, sp_df$has_vowel_letter), margin=1)
table(fp_df$has_suffix, fp_df$has_vowel_letter)
prop.table(table(fp_df$has_suffix, fp_df$has_vowel_letter), margin=1)
# suffix
table(dat$has_suffix, dat$has_vowel_letter)
# prefix
table(dat$has_prefix, dat$has_vowel_letter)
dat |> filter(has_suffix == 1)
# prefix
table(dat$has_prefix, dat$has_vowel_letter)
table(dat$law_phase2, dat$has_prefix, dat$has_vowel_letter)
table(dat$has_prefix, dat$law_phase2, dat$has_vowel_letter)
table(dat$has_prefix, dat$has_vowel_letter, dat$law_phase2)
# prefix
table(dat$has_prefix, dat$has_vowel_letter)
table(dat$prefix)
# prefix
dim(dat)
head(dat)
table(dat$qsp_sp, dat$has_vowel_letter)
MODEL_FOLDER <- 'C:/Users/geitb/Kopenhagen/KopenhagenResearch/monograph/chapters/NounsAdjectives/models_rstanarm'
EBH_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy", "Joshua",
"Judges", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings")
LBH_BOOKS <- c("Esther", "Daniel", "Ezra", "Nehemiah", "1_Chronicles", "2_Chronicles")
LAW_BOOKS <- c("Genesis", "Exodus", "Leviticus", "Numbers", "Deuteronomy")
QSP_SCROLLS = c('1Qisaa', '1QisaaI', '1QisaaII', '2Q3', '4Q13', '4Q20', '2Q7', '4Q27', '1Q4', '2Q12', '4Q37', '4Q38', '4Q38a', '4Q40', '4Q53',
'4Q57', '2Q13', '4Q78', '4Q80', '4Q82', '4Q128', '4Q129', '4Q134', '4Q135', '4Q136',
'4Q137', '4Q138', '4Q139', '4Q140', '4Q141', '4Q142', '4Q143', '4Q144', '4Q158', '4Q364',
'4Q365', '4Q96', '4Q111', '4Q109', '11Q5', '11Q6', '11Q7', '11Q8')
length(QSP_SCROLLS)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
dat <- read.csv('C:/Users/geitb/Kopenhagen/KopenhagenResearch/scripts_research/hebrew_spelling_variation/data/infc_qal_triliteral.csv', sep='\t')
dim(dat)
head(dat)
str(dat)
unique(dat$book)
sum(is.na(dat$pattern))
sum(table(dat$pattern))
# remove ketive/qere
dat <- dat[!(nchar(dat$pattern) == 0 & dat$scroll == 'MT'),]
dat$has_suffix <- as.factor(as.numeric(dat$has_prs | dat$has_nme | dat$has_hloc))
# has_prefix, has_prs, has_nme, lex, book, has_vowel_letter
dat$has_prefix <- as.factor(dat$has_prefix)
dat$has_prs <- as.factor(dat$has_prs)
dat$has_nme <- as.factor(dat$has_nme)
dat$has_hloc <- as.factor(dat$has_hloc)
dat$lex <- as.factor(dat$lex)
dat$book <- as.factor(dat$book)
dat$has_vowel_letter <- as.factor(dat$has_vowel_letter)
dat$type <- as.factor(dat$type)
dat$book2 <- dat$book %>% str_replace('1_', '') |> str_replace('2_', '')
table(dat$book2)
# Make 2 scrolls of 1Qisaa
dat$scroll <- ifelse(dat$scroll == '1Qisaa' & dat$chapter < 34, '1QisaaI',
ifelse(dat$scroll == '1Qisaa' & dat$chapter > 33, '1QisaaII',
dat$scroll))
dat$scroll <- as.factor(dat$scroll)
dat$scr_book2 <- paste(dat$scroll, dat$book2, sep='_')
mt_sp_books <- unique(dat$scr_book2)
mt_sp_books
dat$scr_book2 <- factor(dat$scr_book2, levels = mt_sp_books)
unique(dat$scr_book2)
dat$book2 <- as.factor(dat$book2)
dat$phase <- ifelse(dat$book %in% EBH_BOOKS, 'EBH', ifelse(dat$book %in% LBH_BOOKS, 'LBH', 'NO'))
dat$law_phase <- ifelse(dat$book %in% LAW_BOOKS, 0, ifelse(dat$book %in% EBH_BOOKS, 1,
ifelse(dat$book %in% LBH_BOOKS, 2, 3)))
dat$law_phase <- as.factor(dat$law_phase)
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'MT', 'MT', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
table(dat$qsp_sp)
str(dat)
dat$type
dat$type <- factor(dat$type, levels = c('last', 'first', 'single'))
levels(dat$type)
# Merge single and last syllables in new variable type2
dat$type2 <- ifelse(dat$type %in% c('single', 'last'), 'last', 'first')
dat$type2 <- factor(dat$type2, levels = c('last', 'first'))
dat$lex_type <- paste(dat$lex, dat$type2, sep='_')
dat$lex_type <- as.factor(dat$lex_type)
dat$law_phase2 <- ifelse(dat$book %in% LAW_BOOKS, 'Pent',
ifelse(dat$book %in% EBH_BOOKS, 'FP',
ifelse(dat$book %in% LBH_BOOKS, 'LBH',
'Other')))
dat$law_phase2 <- ifelse(!dat$scroll %in% c(c('MT', 'SP'), QSP_SCROLLS), paste0(dat$law_phase2, '_non_QSP'),
ifelse(dat$scroll %in% QSP_SCROLLS, paste0(dat$law_phase2, '_QSP'),
ifelse(dat$scroll == 'SP', paste0(dat$law_phase2, '_SP'),
dat$law_phase2)))
dat$law_phase2 <- as.factor(dat$law_phase2)
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
dat$law_phase2 <- factor(dat$law_phase2, levels=law_phase2_levels)
dat[is.na(dat$law_phase2),]
dim(dat)
head(dat)
table(dat$scroll)
table(dat$qsp_sp)
mt_sp <- dat |> filter(scroll %in% c('SP', 'MT'))
str(mt_sp)
mt_sp <- droplevels(mt_sp)
table(mt_sp$type2)
dim(dat)
table(dat$scroll)
head(dat)
table(dat$qsp_sp)
dat$ay_ay <- as.factor(as.numeric(substr(dat$lex, 2, 2) == substr(dat$lex, 3, 3)))
dat$i_yod <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'J'))
dat$iii_h <- as.factor(as.numeric(substr(dat$lex, 3, 3) == 'H'))
dat$iii_alef <- as.factor(as.numeric(substr(dat$lex, 3, 3) == '>'))
dat$i_nun <- as.factor(as.numeric(substr(dat$lex, 1, 1) == 'N'))
sort(table(dat$lex))
table(dat$qsp_sp, dat$has_vowel_letter)
table(dat$has_prefix, dat$has_vowel_letter, dat$qsp_sp)
table(dat$has_prefix, dat$has_vowel_letter, dat$law_phase2)
