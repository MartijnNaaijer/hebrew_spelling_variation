hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=vt, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=vt, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1))
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_vt_mt.png'))
fullness_df <- dat |> filter(scroll == 'MT') |> group_by(second_char) |> summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness$second_char <- fullness_df$second_char
hpd_fullness
hpd_fullness$second_char <- factor(hpd_fullness$second_char, levels=fullness_df$second_char)
ggplot(data = hpd_fullness, aes(x = second_char, y = mean)) +
geom_bar(stat = "identity", color = "black", position = position_dodge()) +
labs(x = '', y = 'Fraction of full spelling') +
geom_errorbar( aes(x=second_char, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3,
position = position_dodge(0.9)) +
theme_minimal() +
theme(text = element_text(size = 20))
fullness_df <- dat |> group_by(law_phase2) |> summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$law_phase2 <- fullness_df$law_phase2
groups <- c('MT Pentateuch', 'MT Former Prophets', 'MT LBH', 'MT Other',
'Non-QSP Pentateuch', 'Non-QSP Former Prophets', 'Non-QSP Other',
'QSP Pentateuch', 'QSP Former Prophets', 'QSP Other')
hpd_fullness$law_phase2 <- factor(groups, levels=groups)
hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=law_phase2, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=law_phase2, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1))
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_groups.png'))
table(dat$has_suffix, dat$has_vowel_letter, dat$qsp_sp)
library(binom)
IMAGE_FOLDER <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs/images_pe_yod_hiph'
scripts_path <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs'
functions_path <- file.path(scripts_path, 'functions.R')
config_path <- file.path(scripts_path, 'config.R')
source(functions_path)
source(config_path)
YOD_VERBS <- c('JBC[', 'JNQ[', 'JCR[', 'JVB[', 'JQY[', 'JLL[', 'JMN[')
II_TSADE_VERBS <- c('JY<[', 'JYG[', 'JYQ[', 'JYR[', 'JYT[')
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
DATASET <- 'niph_hiph_pe_yod.csv'
dat <- import_bib_data(DATA_FOLDER, DATASET)
dat <- dat |>
remove_ketiv_qere() |>
add_col_has_suffix() |>
make_book2_column() |>
make_scr_book2_column() |>
make_law_phase_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS) |>
make_law_phase2_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS, QSP_SCROLLS, law_phase2_levels) |>
split_isaiah_scroll() |>
make_factor_columns(factor_columns) |>
droplevels()
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'MT', 'MT', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
# Revalue all participles to "participle"
dat$vt <- ifelse(dat$vt %in% c('ptcp', 'ptca'), 'participle', dat$vt)
dat_ii_tsade <- dat |> filter(lex %in% II_TSADE_VERBS) |> droplevels()
dat <- dat |> filter(!(lex %in% II_TSADE_VERBS)) |> droplevels()
table(dat$vt)
dim(dat)
table(dat$qsp_sp)
dat <- droplevels(dat)
table(dat$has_suffix, dat$has_vowel_letter, dat$qsp_sp)
211/(211+1129)
64/(64+427)
table(dat$has_prefix, dat$has_vowel_letter, dat$qsp_sp)
dat$has_pref_w <- ifelse(dat$prefix == 'W', 1, 0) |> as.factor()
table(dat$vt, dat$has_vowel_letter, dat$has_pref_w)
mt <- dat |> filter(scroll == 'MT')
mt
table(mt$vt, mt$has_vowel_letter, mt$has_pref_w)
table(mt$vt, mt$has_vowel_letter, mt$has_prefix)
table(mt$prefix)
mt |> filter(vt == 'wayq')
# ONLY MT
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(vt) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$vt <- fullness_df$vt
groups <- c('Imperfect', 'Imperative',
'Infinitive absolute', 'Infinitive construct',
'Perfect', 'Participle',
'Wayyiqtol'
)
hpd_fullness$vt <- factor(groups, levels=groups)
hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=vt, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=vt, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1))
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_vt_mt.png'))
ggplot(hpd_fullness) +
geom_bar( aes(x=vt, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=vt, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1, size=20))
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_vt_mt.png'))
fullness_df <- dat |> filter(qsp_sp == 'Other') |>
group_by(vt) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$vt <- fullness_df$vt
groups <- c('Imperfect', 'Imperative',
'Infinitive absolute', 'Infinitive construct',
'Perfect', 'Participle',
'Wayyiqtol'
)
hpd_fullness$vt <- factor(groups, levels=groups)
hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=vt, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=vt, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1, size=20)) +
theme(legend.title=element_blank())
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_vt_non_qsp.png'))
fullness_df <- dat |> filter(qsp_sp == 'QSP') |>
group_by(vt) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$vt <- fullness_df$vt
groups <- c('Imperfect', 'Imperative',
'Infinitive absolute', 'Infinitive construct',
'Perfect', 'Participle',
'Wayyiqtol'
)
hpd_fullness$vt <- factor(groups, levels=groups)
hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=vt, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=vt, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1, size=20)) +
theme(legend.title=element_blank())
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_vt_qsp.png'))
# books in MT
table(mt$book, mt$has_vowel_letter)
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
fullness_df
hpd_fullness$book <- fullness_df$book
unique(dat$book)
books <- unique(dat$book)
hpd_fullness$book <- factor(books, levels=books)
hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=vt, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust=1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, vjust=1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, vjust=1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, vjust=10, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, vjust=-1, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, vjust=0, size=20))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.5, vjust=0, size=15))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0.1, vjust=0, size=15))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=0, vjust=0, size=15))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=-1,
vjust=0, size=15))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=5,
vjust=0, size=15))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper), width=0.4, colour='black', alpha=0.9, size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90, hjust=1,
vjust=0, size=15))
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper),
width=0.4,
colour='black',
alpha=0.9,
size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90,
hjust=1,
vjust=0,
size=15))
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_books_mt.png'))
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
books <- unique(dat$book)
hpd_fullness$book <- factor(books, levels=books)
hpd_fullness
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
hpd_fullness
books <- unique(dat$book)
with(hpd_fullness, hpd_fullness[order(books),])
books
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
hpd_fullness[order(books),]
books <- factor(unique(dat$book), levels=unique(dat$book))
books
hpd_fullness[order(books),]
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
books <- factor(unique(dat$book), levels=unique(dat$book))
books
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
books <- factor(unique(dat$book), levels=unique(dat$book))
books
ddply(hpd_fullness, c('book')
ddply(hpd_fullness, c('book'))
ddply(hpd_fullness, c('book'))
library(plyr)
ddply(hpd_fullness, c('book'))
hpd_fullness %>%
arrange(books)
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
books <- factor(unique(dat$book), levels=unique(dat$book))
books
hpd_fullness %>%
arrange(books)
books
str(books)
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
str(hpd_fullness)
mt$book <- factor(mt$book, levels=unique(mt$book))
fullness_df <- dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
mt$book <- factor(mt$book, levels=unique(mt$book))
fullness_df <- mt |> # dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
mt <- dat |> filter(scroll == 'MT')
mt$book <- factor(mt$book, levels=unique(mt$book))
fullness_df <- mt |> # dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
mt <- dat |> filter(scroll == 'MT')
fullness_df <- mt |> # dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
library(tidyverse)
library(brms)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(ggeffects)
library(bayestestR)
library(binom)
IMAGE_FOLDER <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs/images_pe_yod_hiph'
scripts_path <- 'C:/Users/geitb/Dropbox/monograph_orthography/verbs'
functions_path <- file.path(scripts_path, 'functions.R')
config_path <- file.path(scripts_path, 'config.R')
source(functions_path)
source(config_path)
YOD_VERBS <- c('JBC[', 'JNQ[', 'JCR[', 'JVB[', 'JQY[', 'JLL[', 'JMN[')
II_TSADE_VERBS <- c('JY<[', 'JYG[', 'JYQ[', 'JYR[', 'JYT[')
law_phase2_levels <- c('Pent', 'Pent_SP', 'FP', 'LBH', 'Other',
'Pent_non_QSP', 'FP_non_QSP', 'LBH_non_QSP',
'Other_non_QSP',
'Pent_QSP', 'FP_QSP', 'Other_QSP')
DATASET <- 'niph_hiph_pe_yod.csv'
dat <- import_bib_data(DATA_FOLDER, DATASET)
dat <- dat |>
remove_ketiv_qere() |>
add_col_has_suffix() |>
make_book2_column() |>
make_scr_book2_column() |>
make_law_phase_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS) |>
make_law_phase2_column(LAW_BOOKS, EBH_BOOKS, LBH_BOOKS, QSP_SCROLLS, law_phase2_levels) |>
split_isaiah_scroll() |>
make_factor_columns(factor_columns) |>
droplevels()
dat$qsp_sp <- ifelse(dat$scroll %in% QSP_SCROLLS, 'QSP', ifelse(dat$scroll == 'MT', 'MT', 'Other'))
dat$qsp_sp <- as.factor(dat$qsp_sp)
# Revalue all participles to "participle"
dat$vt <- ifelse(dat$vt %in% c('ptcp', 'ptca'), 'participle', dat$vt)
dat_ii_tsade <- dat |> filter(lex %in% II_TSADE_VERBS) |> droplevels()
dat <- dat |> filter(!(lex %in% II_TSADE_VERBS)) |> droplevels()
table(dat$vt)
dim(dat)
table(dat$qsp_sp)
table(dat$lex)
mt <- dat |> filter(scroll == 'MT')
fullness_df <- mt |> # dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
mt <- dat |> filter(scroll == 'MT')
mt$book <- factor(mt$book, levels=unique(mt$book))
fullness_df <- mt |> # dat |> filter(scroll == 'MT') |>
group_by(book) |>
summarise(full_count = sum(as.numeric(as.character(has_vowel_letter))),
total_count = n())
fullness_df
hpd_fullness <- binom.bayes(
x = fullness_df$full_count, n = fullness_df$total_count, type = "highest", conf.level = 0.95, tol = 1e-9)
hpd_fullness
hpd_fullness$book <- fullness_df$book
hpd_fullness
hpd_fullness
ggplot(hpd_fullness) +
geom_bar( aes(x=book, y=mean), stat="identity", fill='skyblue', alpha=0.7) +
geom_errorbar( aes(x=book, ymin=lower, ymax=upper),
width=0.4,
colour='black',
alpha=0.9,
size=1.3) +
ylab('Fraction of full spelling') +
xlab('') +
theme(axis.text.x = element_text(angle = 90,
hjust=1,
vjust=0,
size=15))
ggsave(file.path(IMAGE_FOLDER, 'explore_pe_yod_hif_books_mt.png'))
